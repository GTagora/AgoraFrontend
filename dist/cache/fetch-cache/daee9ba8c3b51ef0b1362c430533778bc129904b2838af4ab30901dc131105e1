{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=86400","cf-cache-status":"DYNAMIC","cf-ray":"8328087f8e028743-ORD","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=utf-8","date":"Fri, 08 Dec 2023 21:17:06 GMT","etag":"W/\"6d4e-rIk8PXLvH9ZXkAoxEJNUpgzUMBs\"","rndr-id":"4e809ca3-18ba-48e3","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding","x-powered-by":"Express","x-render-origin-server":"Render"},"body":"","status":200,"url":"https://agora-backend-sxd6.onrender.com/getJournalEntries"},"revalidate":31536000,"tags":[]}