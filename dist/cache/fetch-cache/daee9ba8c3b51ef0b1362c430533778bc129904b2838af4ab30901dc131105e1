{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=86400","cf-cache-status":"DYNAMIC","cf-ray":"83281e3b7920e24f-ORD","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=utf-8","date":"Fri, 08 Dec 2023 21:31:56 GMT","etag":"W/\"6d4e-7xsamBTUc4E+LUl3IcUf1reRAHs\"","rndr-id":"ab1f949b-e57b-4e77","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding","x-powered-by":"Express","x-render-origin-server":"Render"},"body":"","status":200,"url":"https://agora-backend-sxd6.onrender.com/getJournalEntries"},"revalidate":31536000,"tags":[]}