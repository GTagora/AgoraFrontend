{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=86400","cf-cache-status":"DYNAMIC","cf-ray":"86559b92d92b6399-ORD","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=utf-8","date":"Sat, 16 Mar 2024 14:59:33 GMT","etag":"W/\"6e2c-0B9l6QRI7PjjNGcwwgQIOzrfOLo\"","rndr-id":"92bb760d-2bfa-4502","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding","x-powered-by":"Express","x-render-origin-server":"Render"},"body":"W3siVGFncyI6W10sIlNsdWciOiJmYWxsLTIzL3FhLXdpdGgtYS1zaW5uZXItaXMtaXQtZ29vZCIsIkRhdGUiOiJEZWNlbWJlciA4LCAyMDIzIiwiSXNzdWUiOiJGYWxsIDIzIiwiQXV0aG9yIjoiQWJlbCBDaGVuIiwiSW1hZ2UiOiJodHRwczovL2ZpcmViYXNlc3RvcmFnZS5nb29nbGVhcGlzLmNvbS92MC9iL2Fnb3JhLWNhMzFiLmFwcHNwb3QuY29tL28vRjIzJTIwUGllY2UlMjBUaXRsZSUyMENhcmRzJTJGZjIzdGl0bGVjYXJkLWFiZWwtY2hlbi5qcGc/YWx0PW1lZGlhJnRva2VuPTliOTBlZDIyLTFhMzctNDY0OC04YzcyLTlmZDY1YzVjMzU3ZSIsIlRpdGxlIjoiUSZBIHdpdGggYSBTaW5uZXI6IElzIEl0IEdvb2Q/IiwiQ29udGVudF9UeXBlIjoiUGVyc29uYWwgRXNzYXkiLCJUZXh0IjoiPGI+UGFydCAxOiBXaGF0IEkgSGF0ZSBBYm91dCBZb3U8L2I+XFxuPGk+SXMgaXQgZ29vZCB0byBiZSBwdXJwb3NlZnVsIHdpdGggZXZlcnkgYWN0aW9uPyA8L2k+XFxuSW4gdGhlIGJlZ2lubmluZywgSSBzaW1wbHkgdGhvdWdodCwg4oCcSSB3YW50IHRvIGxpdmUgd2l0aCB0aGUgcHVycG9zZSBHb2QgZ2F2ZSBtZSHigJ1cXG48aT5XaGF0IGhhcHBlbmVkIGluIHRoZSBlbmQ/IDwvaT5cXG5Tb21lb25lIHRvbGQgbWUsIOKAnFlvdSBrbm93IHdoYXQgSSBoYXRlIGFib3V0IHlvdT8gSSBoYXRlIHRoYXQgZXZlcnl0aGluZyB5b3UgZG8gbmVlZHMgdG8gaGF2ZSBhIHB1cnBvc2UuIFlvdSBhbHdheXMgbmVlZCBhIHJlYXNvbiB0byBkbyBldmVyeSBsaXR0bGUgYWN0aW9uLuKAnVxcbjxpPldoYXQgcmVmbGVjdGlvbnMgZGlkIHlvdSBoYXZlPyA8L2k+XFxuSSBoYWQgdG8gYXNrIG15c2VsZiwg4oCcV2h5IGFtIEkgZG9pbmcgdGhlc2UgYWN0aW9ucz/igJ1cXG48aT5BbmQ/IDwvaT5cXG5JIGhhZCB0byBhZG1pdCB0aGF0IEkgd2FzIGRvaW5nIHRoaXMgdG8ganVzdGlmeSBteXNlbGYuXFxuPGk+V2hlcmUgaXMgR29kIGluIGFsbCB0aGlzPyA8L2k+XFxuVGhlIEZhdGhlciBpcyBwdXJwb3NlZnVsIGluIGxhdmlzaGluZyBsb3ZlIHVwb24gSGlzIGNyZWF0aW9uLiBUaGF04oCZcyBnb29kLiBcXG5cXG48Yj5QYXJ0IDI6IFRoZSBIb3VzZSBvZiBTYW5kPC9iPlxcbjxpPklzIGl0IGdvb2QgdG8gZG8gd2hhdCBhIGdvZGx5IHBlcnNvbiB3b3VsZCBkbz8gPC9pPlxcbkluIHRoZSBiZWdpbm5pbmcsIEkgc2ltcGx5IHRob3VnaHQsIOKAnEkgd2FudCB0byBkbyB3aGF0IEplc3VzIHdvdWxkIGRvIeKAnVxcbjxpPldoYXQgaGFwcGVuZWQgaW4gdGhlIGVuZD8gPC9pPlxcbkkgYmVsaWV2ZWQgZ29kbGluZXNzIHRvIGJlIGEgbWVhbnMgb2YgZ2FpbiwgYSBwZXJzb25hIEkgaGFkIHRvIGJ1aWxkIGFuZCB1cGhvbGQgdG8ga2VlcCBteSBob3VzZSBvZiBzYW5kIGZyb20gY3J1bWJsaW5nLiBJIHNob3dlZCBteSBmYWl0aCB0byBiYXNrIGluIGFmZmlybWF0aW9uIGZyb20gb3RoZXJzIHdpdGhvdXQgYWNjZXB0aW5nIHdoZXJlIEkgd2FzIHRydWx5IGF0LlxcbjxpPldoYXQgcmVmbGVjdGlvbnMgZGlkIHlvdSBoYXZlPyA8L2k+XFxuSSBoYWQgdG8gYXNrIG15c2VsZiwg4oCcV2h5IGFtIEkgdHJ5aW5nIHNvIGhhcmQgdG8gZW11bGF0ZSB0aGUgcGVyY2VpdmVkIOKAmGdvZGx54oCZIHBlcnNvbj/igJ1cXG48aT5BbmQ/IDwvaT5cXG5JIGhhZCB0byBhZG1pdCB0aGF0IEkgd2FzIGNyZWF0aW5nIG15IG93biBpbWFnZSBvZiB3aGF0IGEgZ29kbHkgcGVyc29uIHdvdWxkIGRvIGFuZCBjaGFzZWQgYWZ0ZXIgdGhhdC5cXG48aT5XaGVyZSBpcyBHb2QgaW4gYWxsIHRoaXM/IDwvaT5cXG5UaGUgU29uIGxpdmVkIGEgc2VsZi1zYWNyaWZpY2lhbCBsaWZlIGluIG9iZWRpZW5jZSB0byBjaGFzZSBhZnRlciB0aGUgRmF0aGVyLiBUaGF04oCZcyBnb29kLlxcblxcbjxiPlBhcnQgMzogQSBWaW5lIGFuZCBUd28gRWFnbGVzPC9iPiBcXG48aT5JcyBpdCBnb29kIHRvIGhhdmUgYSBncm93dGggbWluZHNldD8gPC9pPlxcbkluIHRoZSBiZWdpbm5pbmcsIEkgc2ltcGx5IHRob3VnaHQsIOKAnEkgd2FudCB0byBncm93IGFzIGEgdmluZSB0aGF0IGFiaWRlcyBpbiBDaHJpc3Qh4oCdXFxuPGk+V2hhdCBoYXBwZW5lZCBpbiB0aGUgZW5kPyA8L2k+XFxuSnVzdCBhcyB3ZSByZXBlYXQgdGhlIGZvb3RzdGVwcyBvZiB0aGUgSXNyYWVsaXRlcywgSSB3YXMgdGhlIHdhbmRlcmluZyB2aW5lKjogSSB0aG91Z2h0IHRoYXQgZ3Jvd3RoIGFsd2F5cyBtZWFucyBwcm9ncmVzcy5cXG48aT5XaGF0IHJlZmxlY3Rpb25zIGRpZCB5b3UgaGF2ZT8gPC9pPlxcbkkgaGFkIHRvIGFzayBteXNlbGYsIOKAnFdoeSBhbSBJIHNlZWtpbmcgdG8gZ3Jvdz/igJ1cXG48aT5BbmQ/IDwvaT5cXG5JIGhhZCB0byBhZG1pdCB0aGF0IEkgc291Z2h0IG15IGNvbWZvcnQgYW5kIHNlY3VyaXR5IGluIHRoZSBtb3Rpb25zIG9mIG1ha2luZyBwcm9ncmVzcyBhcyBhIENocmlzdGlhbi5cXG48aT5XaGVyZSBpcyBHb2QgaW4gYWxsIHRoaXM/IDwvaT5cXG5UaGUgSG9seSBTcGlyaXQgZ3Jvd3MgdXMgdG8gYmVhciBnb29kIGZydWl0IGZvciBvdXIgVmluZWRyZXNzZXIuIFRoYXTigJlzIGdvb2QuXFxuXFxuXFxuXFxuKkV6ZWtpZWwgMTcgY29udGFpbnMgYSBwYXJhYmxlIGFib3V0IGEgdmluZSBhbmQgdHdvIGVhZ2xlcy4gSW4gdGhpcyBwYXJhYmxlLCBhIGdyZWF0IGVhZ2xlIHJlcHJlc2VudHMgQmFieWxvbiBhbmQgYW5vdGhlciBlYWdsZSBzeW1ib2xpemVzIEVneXB0LiBUaGUgdmluZSByZWZlcnMgdG8gdGhlIGtpbmdkb20gb2YgSnVkYWguIFRoZSBjaGFwdGVyIGRlc2NyaWJlcyBob3cgdGhlIHZpbmUgd2FzIHBsYW50ZWQgYnkgdGhlIEJhYnlsb24gZWFnbGUgaW4gYSBib3VudGlmdWwgcGxhY2UgYnV0IGZvb2xpc2hseSBzdHJldGNoZWQgb3V0IGl0cyByb290cyB0b3dhcmQgdGhlIGVhZ2xlIG9mIEVneXB0LiBUaGUgc3RyZXRjaGluZyByb290cyByZXByZXNlbnQgdGhlIEp1ZGVhbnMnIGFsbGVnaWFuY2Ugd2l0aCBFZ3lwdCBpbiBvcHBvc2l0aW9uIHRvIEJhYnlsb24uIFRoaXMgd2FzIGluIGRpcmVjdCByZWJlbGxpb24gd2l0aCBHb2TigJlzIGNvbW1hbmQgdG8gc2V0dGxlIGRvd24gYW5kIHByb3NwZXIgaW4gQmFieWxvbi4ifSx7IkNvbnRlbnRfVHlwZSI6IlNvbmciLCJEYXRlIjoiRGVjZW1iZXIgOCwgMjAyMyIsIlZpZGVvIjoiaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvR3ZGS1JHZHRwOTAiLCJUYWdzIjpbXSwiSW1hZ2UiOiJodHRwczovL2ZpcmViYXNlc3RvcmFnZS5nb29nbGVhcGlzLmNvbS92MC9iL2Fnb3JhLWNhMzFiLmFwcHNwb3QuY29tL28vRjIzJTIwUGllY2UlMjBUaXRsZSUyMENhcmRzJTJGZjIzdGl0bGVjYXJkLWFsZXgtaG9tLkpQRz9hbHQ9bWVkaWEmdG9rZW49YmRjMjJkOWUtMDQwOC00Y2JhLWI1MzYtOWZhZThmZDBlZDJmIiwiSXNzdWUiOiJGYWxsIDIzIiwiQXVkaW8iOiJodHRwczovL2ZpcmViYXNlc3RvcmFnZS5nb29nbGVhcGlzLmNvbS92MC9iL2Fnb3JhLWNhMzFiLmFwcHNwb3QuY29tL28vRjIzJTIwU29uZyUyMEF1ZGlvJTJGSSdtJTIwSG9tZSUyMEZpbmFsJTIwMy4xZGIud2F2P2FsdD1tZWRpYSZ0b2tlbj00Y2E1ZWNhNC1mYTVhLTQwZGItOGQwNi0wOGNmODc4ZGYxMTAiLCJUaXRsZSI6IkknbSBIb21lIiwiQXV0aG9yIjoiQWxleCBIb20iLCJTbHVnIjoiZmFsbC0yMy9pbS1ob21lIiwiVGV4dCI6IjxiPlZFUlNFIDE8L2I+IFxcblNvbWV0aW1lcyBJIGZlZWwgbGlrZSBJ4oCZbSBsb3N0IHdpdGhvdXQgYSBob21lXFxuU29tZXRpbWVzIEkgZmVlbCBsaWtlIEkgc2ltcGx5IGRvbuKAmXQgYmVsb25nXFxuSSB3YW5uYSBiZSBoZWxkLCB0byBiZSBoZWFyZCwgdG8gYmUgbG92ZWQsIHRvIGJlIHdob2xlXFxuSWYgeW91IHJlYWxseSBjcnkgZm9yIG1lLCB3aHkgZG8gSSBzdGlsbCBmZWVsIGNvbGQ/IFxcblxcbjxiPlZFUlNFIDI8L2I+XFxuU29tZXRpbWVzIG15IG1pbmQgaXMgbGlrZSBzY2FybGV0IG9uIHdoaXRlIHNub3dcXG5Tb21ldGltZXMgbXkgaGVhcnQgaXMgdGhlIHZhbGxleSBvZiBkcnkgYm9uZXNcXG5NeSBzb3VsIGlzIGFmZmxpY3RlZCwgdG9vIGJyb2tlbiBmb3IgaG9wZSwgdGhlIGRpc3RhbmNlIHRvbyB3aWRlLCBJ4oCZbSB0b28gZmFyIHRvIGNvbWUgaG9tZVxcblNvIEkgcHVzaCB5b3UgYXdheSBqdXN0IHRvIHBpdHkgbXlzZWxmIG9uY2UgbW9yZVxcblxcbjxiPlBSRS1DSE9SVVM8L2I+XFxuTmEsIHRoYXQgYWlu4oCZdCB0aGUgdHJ1dGhcXG5UaGlzIGlzIHdoYXQgeW914oCZdmUgc2hvd24gbWVcXG5UaGlzIHdoYXQgeW914oCZdmUgc2hvd24gbWVcXG5cXG48Yj5DSE9SVVM8L2I+IFxcbkhlcmUgaW4geW91ciBsb3ZlIGlzIHRoZSB3YXJtZXN0IEnigJl2ZSBiZWVuXFxuSeKAmW0gc3dhZGRsZWQgaW4gZmxlZWNlLCBzdWZmb2NhdGluZ1xcbkluIHRoZSBkZWFkIG9mIG5pZ2h0IHlvdSBjb21mb3J0IG1lXFxuVGhlcmUncyBub3doZXJlIGVsc2UgSeKAmWQgcmF0aGVyIGJlIFxcblxcbiA8Yj5CUklER0U8L2I+IFxcbknigJl2ZSBiZWVuIGhvbWUgYmVmb3JlXFxuSSBmb3Jnb3QgaG93IGdvb2QgaXQgZmVsdFxcbkkgZm9yZ290IGhvdyBnb29kIGl0IGZlbHRcXG5TYXQgaW4gdGhlc2Ugcm93cyBiZWZvcmVcXG5JIGZvcmdvdCBob3cgZ29vZCBpdCBmZWx0XFxuSSBmb3Jnb3QgaG93IGdvb2QgaXQgZmVsdFxcbknigJl2ZSBiZWVuIGhvbWUgYmVmb3JlXFxuSSBmb3Jnb3QgaG93IGdvb2QgaXQgZmVsdFxcbkkgZm9yZ290IGhvdyBnb29kIGl0IGZlbHRcXG5TYXQgaW4gdGhlc2Ugcm93cyBiZWZvcmVcXG5JIGZvcmdvdCBob3cgcmVhbCB5b3UgYXJlXFxuSSBmb3Jnb3QgaG93IHJlYWwgeW91IGFyZSJ9LHsiVGFncyI6W10sIkltYWdlIjoiaHR0cHM6Ly9maXJlYmFzZXN0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vdjAvYi9hZ29yYS1jYTMxYi5hcHBzcG90LmNvbS9vL0YyMyUyMFBpZWNlJTIwVGl0bGUlMjBDYXJkcyUyRmYyM3RpdGxlY2FyZC1jaHJpcy1tb29uLmpwZz9hbHQ9bWVkaWEmdG9rZW49MDJiOGE3OGEtYzI5Mi00MGZhLTkwMDMtM2NmZDUyNTc3OWY4IiwiVGl0bGUiOiJhIGxldHRlciB0byBteSBGYXRoZXIiLCJDb250ZW50X1R5cGUiOiJQb2VtIiwiRGF0ZSI6IkRlY2VtYmVyIDgsIDIwMjMiLCJUZXh0IjoiZmF0aGVyLFxcblxcbndoYXQgaXMgaXQgdGhhdCB5b3Ugd2FudCBmcm9tIE1lP1xcbmJlY2F1c2UgSSBjYW4gZG8gaXQsIGFuZCBJIHdpbGxcXG5pZiB3aGF0IHlvdSBvcmRlciBpcyBqdXN0IHRvIGxpc3RlblxcbnRoZW4gaGVyZSBJIGFtOyBzaWxlbnQgYW5kIHdhaXRpbmcsIHN0aWxsXFxuXFxuc3RpbGwsIEnigJltIHN0YWduYW50LCBwcm9taXNpbmcgZW1wdHkgZWNob2VzIGZyb20gbXkgbGlwc1xcbnRoZSBoZWFydC1zaGFwZWQgc3RvbmUgaSBiZWFyIHdvbuKAmXQgbW92ZVxcbnVzZSBtZSBhcyBhbiBpbnN0cnVtZW50IGF0IHdpbGxcXG5idXQgaG93LCB3aGVuIG15IHNvdWwgaXMgb3V0IG9mIHR1bmU/XFxuXFxub2JlZGllbmNlIGFuZCByZXZlcmVuY2UsIHBpZXR5IGFuZCBkZXZvdGlvblxcbmFib3ZlIGFsbCB0aGVzZSwgd2hhdCBtb3JlIHNoYWxsIGkgZG8/XFxuaeKAmW0gc2VsZmlzaCBhbmQgd2VhaywgYW54aW91cyBhbmQgYnJva2VuXFxuaGlkZSB0aGlzLCBpIHRyeSwgdG8ga2VlcCBpdCBmcm9tIHlvdVxcblxcbndpdGggYWxsIGhhYml0dWFsIGluY2xpbmF0aW9uc1xcbnRoYXQgbWFrZSBNZSBwcm91ZCxcXG5zbyB0aGF0IHlvdSB3b3VsZCBiZSBwbGVhc2VkLCBhbmQgdG8gbWFrZSB5b3UgcHJvdWRcXG5cXG4tIHlvdXIgc29uXFxuXFxuPGRpdiBzdHlsZT10ZXh0LWFsaWduOnJpZ2h0Oz48cD5teSBkZWFyIHNvbixcXG5cXG53aGVuIHlvdSBhc2sgd2hhdCBpIHdhbnRcXG5pdOKAmXMgbm90IHNvbWV0aGluZyB5b3UgY2FuIGRvXFxueW91IHdhaXQgd2l0aG91dCBwYXRpZW5jZVxcbmV2ZXJ5IHRvaWxlZCBlbmRlYXZvciwgbm90IGVuZHVlZFxcblxcbmkga25vdyB3aGF0IHlvdSB3YW50XFxueW91IHdhbnQgdG8gYmUgd29ydGh5XFxueW91IHdhbnQgdG8gYmUgYmV0dGVyXFxuXFxuZG8geW91IGtub3cgd2hhdCBIZSB3YW50cz9cXG5IZSB3YW50cyB0byBsb3ZlIHlvdVxcbkhlIHdhbnRzIHRvIGJlIHRvZ2V0aGVyXFxuXFxud2l0aCBwcmF5ZXJzIGFuZCBwbGVhcywgdGhlIGJlc3QgdGhpbmdzIGkgY2FuIGdpdmVcXG5hbmQgZm9yIHlvdXJzIHRvIEhpbSwgbm90aGluZyBtb3JlIGNhbiBpIGFza1xcblxcbi0geW91ciBkYWRcXG5cXG48L3A+PC9kaXY+RmF0aGVyLFxcblxcbm15IHdhbGxzIG9mIGdsYXNzIHNoYXR0ZXIsIGFuZCBub3cgcmV2ZWFsXFxud2hhdCBp4oCZdmUgdHJpZWQgdG8gaGlkZSBmcm9tIG1lLCBwcmVzZW50IHRvIFlvdVxcbllvdSBhcmUgbXkgc3Ryb25nIGZvcnRyZXNzOyBZb3UgYXJlIG15IGNvbWZvcnRpbmcgaG9tZVxcbmV0Y2ggWW91ciB3b3JkcyB1cG9uIG15IGhlYXJ0LCBubyBsb25nZXIgc3RvbmVcXG5Zb3VyIHByZXNlbmNlIGV2ZXJsYXN0aW5nLCBpbnZpdGVzIG1lIHRvIGNvbmZpZGVcXG5teSBzdHJpdmluZ3MgY2Vhc2UgYW5kIGluIFlvdSBpIGFiaWRlXFxuXFxuYXMgbGlmZSBmbGl0cyB0aHJvdWdoIGl0cyBzZWFzb25zXFxuWW91IHR1cm4gbXkgY29sZCwgdGFycnlpbmcgd2ludGVyIHRvIGEgd2FybSwgeWVhcm5pbmcgc3ByaW5nXFxudGhyb3VnaCBpdCBhbGwsIGJlY2F1c2Ugb2YgWW91LCBpIHdpbGwgYmU7IHJlam9pY2luZyBhbmQgbW92ZWQsIHN0aWxsXFxuWW91ciBzb25nIGlzIHRoZSBtZWxvZHkgbXkgaGVhcnQgd2lsbCBzaW5nXFxuXFxud2l0aCBncmFjZSBzbyBzdWZmaWNpZW50LFxcbmEgbG92ZSBzbyBraW5kLFxcbmluIG15IHdlYWtuZXNzIFlvdXIgcG93ZXIgaXMga25vd25cXG5cXG5pIGFtIFlvdXIgY2hpbGRcXG5Zb3UgYXJlIG15IEZhdGhlclxcbndoYXQgaSB3YW50IGZyb20gWW91LCBpcyBZb3UgYWxvbmVcXG5cXG4tIFlvdXIgc29uIiwiSXNzdWUiOiJGYWxsIDIzIiwiQXV0aG9yIjoiQ2hyaXMgTW9vbiIsIlNsdWciOiJmYWxsLTIzL2EtbGV0dGVyLXRvLW15LWZhdGhlciJ9LHsiU2x1ZyI6ImZhbGwtMjMvemFjY2hhZXVzLXNvbmciLCJUaXRsZSI6IlphY2NoYWV1cycgU29uZyIsIlRleHQiOiJpIHdyZXN0bGUgbXkgd2F5IHRocm91Z2ggdGhlIGNyb3dkXFxub2ggd2h5IHdpdGggc21hbGwgc3RhdHVyZSB3YXMgaSBlbmRvd2VkXFxubXkgbHVuZ3MgZ2FzcGluZywgZ3Jhc3BpbmcgZm9yIGJyZWF0aFxcbnN0aWxsIG9uZSB0aG91Z2h0IGZpbGxzIG15IGhlYWRcXG5pIGp1c3Qgd2FudCB0byBzZWUgWW91XFxuXFxudGhpcyB0aG91Z2h0IGkgaG9sZCBhcyBpIGNsYW1iZXIgdXAgdGhlIHRyZWVcXG5sZXR0aW5nIGdvIG9mIGFsbCBteSBwcmVjaW91cyBkaWduaXR5XFxuZm9yIGFtb25nIHByb2JpbmcgZXllcyBkYXJrZW5lZCB3aXRoIGNvbnRlbXB0XFxuaSB3aWxsIGJlIHBlcmZlY3RseSBjb250ZW50XFxuaWYgaSBjYW4ganVzdCBzZWUgWW91XFxuXFxuYW5kIHVwb24gdGhlIHRyZWUgWW91IHNlZSBtZVxcbm91dCBvZiB0aGUgZGFya25lc3MgWW91IHB1bGwgbWVcXG53aXRoIGV5ZXMgdGhhdCBkYW5jZSB3aXRoIGZsYW1lXFxuYW5kIHdvcmRzIG15IGVhcnMgaGF2ZSBuZXZlciBoZWFyZFxcbuKAnEkgd2FudCB0byBzZWUgeW914oCdXFxuXFxuaSwgd2l0aCBteSBwcmlkZWZ1bCBoZWFydFxcbmksIHdpdGggbXkgYnJva2VuIHNwaXJpdFxcbmksIHRoZSBzaW5uZXIgb2Ygc2lubmVyc1xcbmhpZGluZyBpbiB0aGUgZGVlcGVzdCBvZiBzaGFkb3dzXFxud2hvIGFtIGkgdGhhdCBZb3Ugd291bGQgc2VlIG1lP1xcblxcbllvdSwgd2l0aCBnbG9yeSBiZXlvbmQgY29tcGFyZVxcbllvdSwgd2l0aCBncmFjZSB0aGF0IG5ldmVyIGVuZHNcXG5Zb3UsIHRoZSBLaW5nIGFib3ZlIGFsbCBraW5nc1xcbnJ1bGluZyBmcm9tIGEgdGhyb25lIG9mIHBlcmZlY3QgbG92ZVxcbndobyBhbSBpIHRoYXQgWW91IHdvdWxkIHNlZWsgbWU/XFxuXFxubm8sIGl04oCZcyBub3QgYmVjYXVzZSBvZiB3aG8gaSBhbVxcbmJ1dCBiZWNhdXNlIG9mIHdobyBZb3UgYXJlXFxuWW91LCB3aG8gd291bGQgY2hvb3NlIHRvIGVudGVyIG15IGhvdXNlXFxuYW5kIHdhbGsgd2l0aCBtZSBmb3IgYWxsIGV0ZXJuaXR54oCUXFxub2ggd2hhdCBhIHNpZ2h0LCBteSBzb3VsIHN0aXJzIGFuZCBzaW5nc1xcblxcbmhvdyBtYW55IG5pZ2h0cyBoYXZlIGkgd2FsbG93ZWQgaW4gc2hhbWU/XFxudGhpcnN0aW5nIGZvciBnbG9yeSB5ZXQgbmV2ZXIgZW1icmFjaW5nIG15IG5hbWVcXG5sdXJraW5nIGluIGEgY2FzdGxlIGJ1aWx0IG9uIHNhbmQgYW5kIGZlYXJzXFxuYnV0IFlvdSBhbG9uZSBzZWUgYWxsIG15IHNpbGVudCB0ZWFyc1xcbmFuZCB3aXBlIHRoZW0gZ2VudGx5IGZyb20gbXkgZmFjZVxcblxcbmFzIFlvdSBob2xkIG15IGhhbmQgdGhyb3VnaCB0aGVzZSB3YXRlcnNcXG53YXZlcyBvZiBncmFjZSB3YXNoIG1lIHB1cmVcXG5ib3JuIGFnYWluLCByaWdodGVvdXMgYXMgdGhlIG5hbWUgaSB3ZWFyKlxcbnRvIGR3ZWxsIGluIFlvdXIgaG91c2UsIG5vdyBteSBvbmUgZGVzaXJlXFxudG8gc2VlayBZb3VyIGZhY2UgYWxsIHRoZSBkYXlzIG9mIG15IGxpZmVcXG5cXG5teSBoZWFydCBsb25ncyBmb3IgYXNzdXJhbmNlXFxuaW4gYnJpZ2h0IGV5ZXMsIGluZHVsZ2luZyB3b3Jkc1xcbmVwaGVtZXJhbCBnbGludHMgaW4gYSBkZXNlcnQgd29ybGRcXG5idXQgWW91IGFyZSB0aGUgd2VsbCB0aGF0IG5ldmVyIHJ1bnMgZHJ5XFxuc28gbWF5IFlvdXIgZXllcyBiZSB0aGUgb25seSBvbmVzIHRoYXQgc2F0aXNmeVxcblxcbnRob3VnaCBpIGFtIHNtYWxsIGFuZCB3ZWFrXFxubWF5IG15IHdlYWtuZXNzIG1hZ25pZnkgWW91ciBtYWplc3R5XFxubWF5IG15IGxpdHRsZSBsdW5ncyBidXJzdCFcXG51bmJyaWRsZWQgZGVsaWdodCBpbiBZb3VyIHByZXNlbmNlXFxuYXMgaSBnYXplIHVwb24gbXkgYmVhdXRpZnVsIFNhdmlvclxcblxcbmV2ZXJ5IGJyZWF0aCBZb3XigJl2ZSBnaWZ0ZWQgdG8gbWVcXG5ldmVyeSBicmVhdGggaSBwb3VyIGluIG1lbG9keVxcbnRvIG15IGRlYXJlc3QgZnJpZW5kXFxudG8gbXkgbG92aW5nIEZhdGhlclxcbnRvIHRoZSBPbmUgd2hvIHNhdyBtZSBpbiB0aGF0IHRyZWVcXG5cXG48aT4gQW5kIEplc3VzIHNhaWQgdG8gaGltLCDigJxUb2RheSBzYWx2YXRpb24gaGFzIGNvbWUgdG8gdGhpcyBob3VzZSwgc2luY2UgaGUgYWxzbyBpcyBhIHNvbiBvZiBBYnJhaGFtLiBGb3IgdGhlIFNvbiBvZiBNYW4gY2FtZSB0byBzZWVrIGFuZCB0byBzYXZlIHRoZSBsb3N0LuKAnVxcbn5MdWtlIDE5OjktMTAgPC9pPlxcblxcbiogWmFjY2hhZXVz4oCZIG5hbWUgbWVhbnMg4oCccHVyZeKAnSBvciDigJxyaWdodGVvdXPigJ0iLCJEYXRlIjoiRGVjZW1iZXIgOCwgMjAyMyIsIkNvbnRlbnRfVHlwZSI6IlBvZW0iLCJJc3N1ZSI6IkZhbGwgMjMiLCJUYWdzIjpbXSwiQXV0aG9yIjoiRXN0aGVyIFNoZW4iLCJJbWFnZSI6Imh0dHBzOi8vZmlyZWJhc2VzdG9yYWdlLmdvb2dsZWFwaXMuY29tL3YwL2IvYWdvcmEtY2EzMWIuYXBwc3BvdC5jb20vby9GMjMlMjBQaWVjZSUyMFRpdGxlJTIwQ2FyZHMlMkZmMjN0aXRsZWNhcmQtZXN0aGVyLXNoZW4uanBnP2FsdD1tZWRpYSZ0b2tlbj04MDMwMWI2NS1iOTY0LTQ2ZmItYTE1OC05OGQ4Mjk4YjU0YjEifSx7IlRleHQiOiI8Yj5WRVJTRSAxPC9iPlxcbkdvZCBvdmVyIGFsbCB0aW1lXFxuSGVhdmVuIGFuZCBlYXJ0aCBhcmUgSGlzIHJlaWduXFxuSGUgZmluZHMgbWUgaW4gbXkgd2FuZGVyaW5nXFxuQW5kIGNhbGxzIG1lIHRvIEhpcyBnZW50bGUgZXllc1xcblxcbjxiPlZFUlNFIDI8L2I+XFxuSGVhciwgSGlzIHRlbmRlciB2b2ljZVxcbkluIHN0aWxsbmVzcyBJIGNhbGwgSGlzIE5hbWVcXG5NeSBoZWFydCBpcyBnbGFkIGluIEhpcyBlbWJyYWNlXFxuSW4gSGlzIHByZXNlbmNlIEkgZmluZCBteSBob21lXFxuXFxuPGI+Q0hPUlVTPC9iPlxcbk15IHNvdWwgd2FpdHMgZm9yIHRoZSBPbmUgd2hvIHNhdmVzXFxuRm9yIG15IGRlYXJlc3QgZnJpZW5kXFxuV2hvIGxpZnRzIGFsbCB0aGUgd2VpZ2h0XFxuT2ZmIG15IGhlYXZ5LCBidXJkZW5lZCBoZWFydFxcbk15IHNvdWwgd2FpdHMgZm9yIHRoZSBPbmUgd2hvIGdhdmVcXG5IaXMgZXRlcm5pdHkgdG8gYmUgb25lIHdpdGggbWVcXG5UaHJvdWdoIHRoZSBzdGVhZGZhc3QgbG92ZSBvZiB0aGUgRmF0aGVyXFxuT2YgdGhlIEZhdGhlclxcblxcbjxiPkJSSURHRTwvYj5cXG5IZSBpcyBoZXJlXFxuSGUgaXMgaGVyZVxcbkhlIGlzIGhlcmVcXG5IZSBpcyBoZXJlXFxuTXkgc291bCB3YWl0c1xcbk15IHNvdWwgc2Vla3NcXG5NeSBzb3VsIGZpbmRzXFxuVGhhdCBIZSBpcyBoZXJlXFxuQWxsIHRoaXMgdGltZVxcbkkgd2FzIGxvc3RcXG5Kb3kgSeKAmXZlIGZvdW5kXFxuQ2F1c2UgSGUgaXMgaGVyZSIsIklzc3VlIjoiRmFsbCAyMyIsIlRpdGxlIjoiU3RlYWRmYXN0IExvdmUiLCJWaWRlbyI6Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkLzVtOTVPM1ZwblNBIiwiQXVkaW8iOiJodHRwczovL2ZpcmViYXNlc3RvcmFnZS5nb29nbGVhcGlzLmNvbS92MC9iL2Fnb3JhLWNhMzFiLmFwcHNwb3QuY29tL28vRjIzJTIwU29uZyUyMEF1ZGlvJTJGU3RlYWRmYXN0JTIwTG92ZSUyMC0lMjAxMl81XzIzJTJDJTIwMy40MyVFMiU4MCVBRlBNLm1wMz9hbHQ9bWVkaWEmdG9rZW49ZWFkYTk4ZGItZWNiZi00NWE0LWE5NjktYmE5OWE0ZjJjNDZhIiwiU2x1ZyI6ImZhbGwtMjMvc3RlYWRmYXN0LWxvdmUiLCJJbWFnZSI6Imh0dHBzOi8vZmlyZWJhc2VzdG9yYWdlLmdvb2dsZWFwaXMuY29tL3YwL2IvYWdvcmEtY2EzMWIuYXBwc3BvdC5jb20vby9GMjMlMjBQaWVjZSUyMFRpdGxlJTIwQ2FyZHMlMkZmMjN0aXRsZWNhcmQtZXRoYW4tbmcuanBnP2FsdD1tZWRpYSZ0b2tlbj0xZDA1NWUwZC03NGRkLTRlNTAtYTAxMy04NWVlZmM2OWY0MTYiLCJDb250ZW50X1R5cGUiOiJTb25nIiwiRGF0ZSI6IkRlY2VtYmVyIDgsIDIwMjMiLCJUYWdzIjpbXSwiQXV0aG9yIjoiRXRoYW4gTmcifSx7Iklzc3VlIjoiRmFsbCAyMyIsIlRleHQiOiI8aT5cIkZvciBub3cgd2Ugc2VlIGluIGEgbWlycm9yIGRpbWx5LCBidXQgdGhlbiBmYWNlIHRvIGZhY2VcIjwvaT4gIOKAlCAxIENvcmludGhpYW5zIDEzOjEyIChFU1YpIDxiciAvPiA8YnIgLz5p4oCZbSBzdXJyb3VuZGVkIGJ5IHlvdVxcbmluIG1pcnJvcnMsIGluIHdpbmRvd3MsIGV2ZXJ5IGdsYW5jaW5nIHN1cmZhY2VcXG55b3UgaGF1bnQgdGhlIGdsYXNzXFxuaSBsb29rIGF0IHlvdSwgc2NydXRpbml6ZSwgYW5kIGN1cmRsZSB3aXRoIHJlcHJvYWNoXFxueWV0LFxcbnlvdSBhcmUgbWVzbWVyaXppbmdcXG55b3UgbWlycm9yIG15IG1vdmVtZW50cyBhbmQgbWVldCBteSBleWVzO1xcbnlvdSBwcmVvY2N1cHkgbWVcXG53aGVuIGkgbG9vayBjbG9zZWx5LFxcbnRoZSBnbGFzcyBpcyBvcGFxdWUgd2l0aCB5b3VyIGJ1cmRlbnMgYW5kIGRlc2lyZXPigJRcXG5hIGRpc3RyYWN0aW9uXFxuXFxuXFxuaeKAmW0gc3Vycm91bmRlZCBieSB5b3VcXG5pbiB2b2ljZXMsIGJvZGllcywgb3V0c3RyZXRjaGVkIGhhbmRzXFxudG9nZXRoZXIgeW914oCZcmUgbXkgcGFyYWNodXRlLCBidXQgc3RpbGwgZnVybGVkOyB5b3VyIHZpYnJhbnQgYnJlYWR0aCB1bmRpc2NvdmVyZWRcXG5pIGxvb2sgYXQgeW91IGZyb20gYmVoaW5kIGdsYXNzIHdhbGxzXFxubXkgZ2hvc3RseSByZWZsZWN0aW9uLCBzdXBlcmltcG9zZWRcXG5hIGZpbG0gb2YgZ3JpbWUgYW5kIGNvbmNlaXQsIG9ic2N1cmluZyB5b3VyIGJlYXV0eVxcbmJ1dCxcXG5pZiBpIGxvb2sgY2xvc2VseSwgaWYgaSBmb3JnZXQgbXlzZWxmLFxcbnRoZSBnbGFzcyB2YW5pc2hlcywgIFxcbmFuZCB3ZSBhcmUgZmFjZSB0byBmYWNlIChmaW5hbGx5KVxcbmnigJltIGZhbGxpbmcsIGhhbmRzIHRvdWNoLCBhbmQgXFxueW91ciBjb2xvcnMgdW5mdXJsIGFjcm9zcyB0aGUgc2t5XFxuXFxuXFxuaeKAmW0gc3Vycm91bmRlZCBieSBZb3VcXG5pbiBtb3JuaW5nIGdsb3J5LCB0aGUgc3VucmlzZTsgaW4gcHVyZSwgdW5ydWZmbGVkIGFpclxcbllvdXIgcHJlc2VuY2UgaXMgYnJlYXRoYWJsZSwgZnJhZ3JhbnQsIHlldCBicmVhdGh0YWtpbmdcXG5pIGxvb2sgYXQgdGhpcyB3b3JsZCwgdW52ZWlsZWQgYnkgWW91ciBsaWdodCxcXG5hdCBjcmVhdGlvbiwgd2hpY2ggYmx1c2hlcyB3aXRoIHJldmVyZW50IGpveVxcbmFuZCxcXG5teSByZWZsZWN0aW9uLCBhIG1lcmUgbWVtb3J5LCBnbGltbWVycyBhbmQgZmFkZXNcXG5jaGlsZHJlbiBsYXVnaCBhbmQgZW1icmFjZSwgWW91ciBHaG9zdCBkd2VsbGluZyBhbW9uZyB0aGVtXFxuYXMgaSBsb29rIGNsb3NlbHksXFxuYm9kaWVzIGFuZCBiYXJyaWVycyBkaXNhcHBlYXI7IFlvdXIgcmFkaWFuY2Ugc2hpbmVzIHRocm91Z2hcXG5saWtlIGJsb29taW5nIHBhcmFjaHV0ZXMsIFlvdSBmaWxsIHVwIHRoZSBza3lcXG5cXG5hbmQgaeKAmW0gbWVzbWVyaXplZCwgYWdhaW4iLCJJbWFnZSI6Imh0dHBzOi8vZmlyZWJhc2VzdG9yYWdlLmdvb2dsZWFwaXMuY29tL3YwL2IvYWdvcmEtY2EzMWIuYXBwc3BvdC5jb20vby9GMjMlMjBQaWVjZSUyMFRpdGxlJTIwQ2FyZHMlMkZmMjN0aXRsZWNhcmQtb2xpdmlhLWh1LmpwZWc/YWx0PW1lZGlhJnRva2VuPTc2OTZhYTQ5LWFiMzAtNDgxNi1iZjdmLTljODc3ZmI5ZGE4NSIsIkF1dGhvciI6Ik9saXZpYSBIdSIsIlNsdWciOiJmYWxsLTIzL3lvdSIsIkRhdGUiOiJEZWNlbWJlciA4LCAyMDIzIiwiQ29udGVudF9UeXBlIjoiUG9lbSIsIlRhZ3MiOltdLCJUaXRsZSI6InlvdSJ9LHsiQ29udGVudF9UeXBlIjoiQWNhZGVtaWMgRXNzYXkiLCJEYXRlIjoiRGVjZW1iZXIgOCwgMjAyMyIsIlRleHQiOiI8Yj5JZiBHb2QgaXMgYWxsIGdvb2QsIHRoZW4gaGUgbXVzdCBub3Qgd2FudCBoaXMgY3JlYXRpb24gdG8gc3VmZmVyLiBJZiBHb2QgaXMgYWxsIHBvd2VyZnVsLCB0aGVuIGhlIG11c3QgaGF2ZSB0aGUgbWVhbnMgdG8gbWFrZSBpdCBzby4gV2h5LCB0aGVuLCBpcyB0aGVyZSBzaW4gaW4gdGhpcyB3b3JsZD8gV2h5IGlzIHRoZXJlIHN1ZmZlcmluZz8gRG9lcyB0aGUgZXhpc3RlbmNlIG9mIHNpbiBjb250cmFkaWN0IHRoZSBleGlzdGVuY2Ugb2YgR29kPzwvYj5cXG5cXG5UaGlzIGlzLCBpbiBpdHMgc2ltcGxlc3QgZm9ybSwgdGhlIHByb2JsZW0gb2YgZXZpbC4gTWF5YmUgeW914oCZdmUgbmV2ZXIgdGhvdWdodCBvZiBpdCBpbiB0aGlzIHdheSBiZWZvcmUsIGJ1dCBJ4oCZbSBzdXJlIHNvbWV0aGluZyBzaW1pbGFyIGhhcyBhdCBsZWFzdCBjcm9zc2VkIHlvdXIgbWluZCBhdCBzb21lIHBvaW50IC0gdGhhdCBxdWVzdGlvbiBvZiB3aHkgR29kIHdvdWxkIGFsbG93IGZvciBzaW4gYW5kIHN1ZmZlcmluZyB0byBleGlzdC4gSXQgZGVmaW5pdGVseSBjcm9zc2VzIG15IG1pbmQgYWxsIHRoZSB0aW1lLiBJdOKAmXMgYSBxdWVzdGlvbiB0aGF0IHBlb3BsZSBoYXZlIGJlZW4gdHJ5aW5nIHRvIGFuc3dlciBzaW5jZSBiZWZvcmUgQ2hyaXN0IGNhbWUgdG8gZWFydGggLSB0YWtlIEdyZWVrIHBoaWxvc29waGVyIEVwaWN1cnVzLCB3aG8gc2FpZCAoaW4gcGFyYXBocmFzZSk6IDxpPlwiSXMgR29kIHdpbGxpbmcgdG8gcHJldmVudCBldmlsLCBidXQgbm90IGFibGU/IFRoZW4gaGUgaXMgbm90IG9tbmlwb3RlbnQuIElzIGhlIGFibGUsIGJ1dCBub3Qgd2lsbGluZz8gVGhlbiBoZSBpcyBtYWxldm9sZW50LiBJcyBoZSBib3RoIGFibGUgYW5kIHdpbGxpbmc/IFRoZW4gZnJvbSB3aGVuY2UgY29tZXMgZXZpbD9cIjwvaT5cXG5cXG5XaGlsZSBJIGRvbuKAmXQgYmVsaWV2ZSB0aGF0IHRoZXJlIHdpbGwgZXZlciBiZSBhIHBlcmZlY3Qgc2F0aXNmYWN0b3J5IGFuc3dlciB0byB0aGlzIHF1ZXN0aW9uIHVudGlsIHdlIGFyZSBzdGFuZGluZyBmYWNlIHRvIGZhY2Ugd2l0aCBHb2QsIEkgZG8gdGhpbmsgaXTigJlzIG9uZSB0aGF0IG1hbnkgc3RydWdnbGluZyBpbiB0aGVpciBmYWl0aCB3aWxsIGNvbWUgYWNyb3NzIGF0IG9uZSBwb2ludCBvciBhbm90aGVyLiBJbiB3cml0aW5nIHRoaXMsIEkgaG9wZSB0byBwcm92aWRlIG15IHRob3VnaHRzIG9uIHRoaXMgcXVlc3Rpb24gYW5kIGhvdyBJIHJlY29uY2lsZWQgaXQgaW4gbXkgb3duIG1pbmQuIE15IGFuc3dlciBpcyBub3QsIGluIGFueSBzaGFwZSBvciBmb3JtLCBvYmplY3RpdmUgdHJ1dGg6IEl0IGlzIHdoYXQgSSBiZWxpZXZlIGJhc2VkIG9uIHNjcmlwdHVyZSBhbmQgbXkgY3VycmVudCwgbGltaXRlZCB1bmRlcnN0YW5kaW5nIG9mIEdvZOKAmXMgY2hhcmFjdGVyLiBJIGNvdWxkIGJlIGNvbXBsZXRlbHkgd3JvbmcsIHRob3VnaCBJIHdvdWxkIGhvcGUgbm90LiBJdOKAmXMgbm90IG1lYW50IHRvIGJlIGEgZGVmaW5pdGUgYW5zd2VyIGVpdGhlciwgc2ltcGx5IGEgc3RhcnRpbmcgcG9pbnQgdG8gaGVscCB5b3UgdGhpbmsuXFxuXFxuQmVmb3JlIEkgYmVnaW4gbXkgcmVhc29uaW5nLCB0aGVyZSBhcmUgc29tZSBwb2ludHMgb2YgaW1wb3J0YW5jZSB0aGF0IGhhdmUgdG8gYmUgZXN0YWJsaXNoZWQuIEZpcnN0LCBJIGFtIG5vdCB3cml0aW5nIHRoaXMgdG8gcHJvdmUgdGhlIGV4aXN0ZW5jZSBvZiBHb2QgLSBJIGFtIHRyeWluZyB0byBwcm92ZSB0aGF0IHRoZSBleGlzdGVuY2Ugb2YgdGhlIGFsbC1wb3dlcmZ1bCwgYWxsLWtub3dpbmcsIGFuZCBhbGwtZ29vZCBHb2QgdGhhdCBJIGJlbGlldmUgaW4gYW5kIHRoZSBleGlzdGVuY2Ugb2Ygc2luIGlzIG5vdCBjb250cmFkaWN0b3J5LiBBcyBzdWNoLCB0aGUgYmFzaXMgb2YgbXkgcmVhc29uaW5nIGFzc2VydHMgdGhhdCBib3RoIEdvZCBhbmQgc2luIGV4aXN0IG9uIEVhcnRoLCB3aGljaCBJIGJlbGlldmUgYXMgYSBDaHJpc3RpYW4gdG8gYmUgdHJ1ZSwgYW5kIHVwb24gd2hpY2ggSSBidWlsZCBteSBhcmd1bWVudCByZWNvbmNpbGluZyB0aGVzZSB0d28gZXhpc3RlbmNlcy5cXG5cXG5TZWNvbmRseSwgSSB3aWxsIHVzZSBzY3JpcHR1cmUgdG8gc3VwcG9ydCBkZWZpbml0aW9ucyBvciBsaW5lcyBvZiByZWFzb25pbmcsIHdoaWNoIHNvbWUgbWF5IGNvbnNpZGVyIGNpcmN1bGFyIGxvZ2ljLiBIb3dldmVyLCBsb29raW5nIGF0IHRoZSB2ZXJzZXMgd2lsbCByZXZlYWwgdGhhdCBtb3N0IG9mIHRoZW0gc2ltcGx5IHByb3ZpZGUgYSBzY3JpcHR1cmFsIGJhc2lzIGZvciB0aGUgcHJlbWlzZXMgdGhhdCBJ4oCZbSBwcmVzZW50aW5nOiBmb3IgZXhhbXBsZSwgSGVicmV3cyA0OjEzLCByZWxheWluZyB0aGUgb21uaXNjaWVuY2Ugb2YgR29kLCB3aGljaCBpcyBhIGNoYXJhY3RlcmlzdGljIG9mIEhpcyB3ZSBhcmUgYWxyZWFkeSBwcm9wb3NpbmcgdG8gYmUgdHJ1ZSBpbiBvcmRlciB0byBzZXQgdXAgdGhlIHByb2JsZW0gb2YgZXZpbC4gSW4gY2FzZXMgd2hlcmUgdGhpcyBpcyBub3QgZXZpZGVudCwgc2NyaXB0dXJlIGlzIHVzZWQgdG8gcHJvdmlkZSBjbGFyaWZpY2F0aW9uIGZvciBvdGhlcndpc2UgbW9yZSB1bmNsZWFyIG1hdHRlcnMgYW5kIGhvbGRzIHRydWUgYmVjYXVzZSBvZiB0aGUgYmFzaXMgb2YgdGhlIHByb2JsZW0gLSBzaW5jZSBHb2QgaXMgYWxsLWdvb2QgYW5kIGFsbC1rbm93aW5nLCBhbmQgSGlzIFdvcmQgcmVmbGVjdHMgaGlzIGNoYXJhY3RlciwgaXQgY2FuIGJlIGhlbGQgYXMgdHJ1dGguIFRoaXMgcG9pbnQgaXMgcHJvYmFibHkgZWFzeSB0byBkaXNhZ3JlZSB3aXRoIG1lIG9uLCBhbmQgSeKAmW0gc3VyZSBzb21lIHdpbGwsIHNvIEkgd2lsbCB0cnkgYW5kIHdyaXRlIHRoaXMgc28gdGhhdCBpdCBob2xkcyB0byBqdXN0IHJlYXNvbmluZyBhcyB3ZWxsLlxcblxcbkZpbmFsbHksIHlvdSBtYXkgbm90aWNlIHRoYXQgYXMgSeKAmW0gdGFja2xpbmcgdGhpcyBwcm9ibGVtIEnigJlsbCBiZSBtb3N0bHkgZm9jdXNpbmcgb24gdGhlIGNvZXhpc3RlbmNlIG9mIEdvZCBhbmQgc2luIGluIHBhcnRpY3VsYXIuIFllcywgdGhpcyBjYW4gYmUgc2VlbiBhcyBhIHNpbXBsaWZpY2F0aW9uIG9mIHRoZSBhcmd1bWVudC4gSG93ZXZlciwgSSBjaG9zZSB0byB1c2Ugc2luIGFzIGFuIG92ZXJhcmNoaW5nIHRlcm0gZm9yIHN1ZmZlcmluZywgZGVhdGgsIGFuZCB0aGUgZ2VuZXJhbCDigJxiYWTigJ0gaW4gdGhlIHdvcmxkIGJlY2F1c2UgaXQgYWxsb3dzIGZvciBhIG1vcmUgZGlyZWN0IGFwcHJvYWNoIHRvIHRoZSBpc3N1ZSByYXRoZXIgdGhhbiB0cnlpbmcgdG8gdGFja2xlIGFsbCB0aGUgYXNwZWN0cyBvZiB3cm9uZyB0aGF0IHdlIHNlZSBpbiB0aGUgd29ybGQgLSBhbmQsIG1vcmUgaW1wb3J0YW50bHksIGJlY2F1c2UgYXMgYSBDaHJpc3RpYW4sIEkgYmVsaWV2ZSB0aGF0IGFsbCBvZiB3aGF0IEkgbWVudGlvbmVkIGFib3ZlIGNhbWUgYXMgYSByZXN1bHQgb2Ygc2luIChSb21hbnMgNToxMikuIFxcblxcblNvIHdoYXQgaXMgc2luP1xcblxcblNjcmlwdHVyZSBzYXlzIHNpbiBpcyB0aGUgdHJhbnNncmVzc2lvbiBvZiB0aGUgbGF3IG9mIEdvZCAoMSBKb2huIDM6NCkuIElmIEdvZOKAmXMgbGF3IGlzIHBlcmZlY3QgKFBzYWxtIDE5OjctOSksIHRoZW4gc2luIGlzIGxhd2xlc3NuZXNzIC0gaW4gb3RoZXIgd29yZHMsIHNpbiBpcyB3aGF0IGlzIG5vdCBvZiBHb2QsIGJlY2F1c2UgR29kIGlzIHBlcmZlY3QuIFRoZXJlIGlzIEdvZCwgYW5kIHRoZW4gdGhlcmUgaXMgc2luLCBhbnl0aGluZyBhcGFydCBmcm9tIEdvZC4gVGhpcyBzaG91bGQgaG9sZCB0cnVlIHdoZXRoZXIgeW91IGJlbGlldmUgaW4gdGhlIHZhbGlkaXR5IG9mIHNjcmlwdHVyZSBvciBub3QuIERvZXMgdGhhdCBtZWFuIGl04oCZcyBpbXBvc3NpYmxlIGZvciBHb2QgdG8gc2luPyBJc27igJl0IHRoYXQgY29udHJhZGljdG9yeSB0byBoaXMgb21uaXBvdGVudCBuYXR1cmU/IFdlbGwsIG5vdCBleGFjdGx5LiBcXG5cXG5TY3JpcHR1cmUgZG9lc27igJl0IHNheSB3aGV0aGVyIEdvZCA8aT5jYW48L2k+IHNpbiwgYnV0IGl0IGRvZXMgc2F5IHdoZXRoZXIgaGUgPGk+d291bGQ8L2k+IC0gYW5kIG9idmlvdXNseSwgdGhlIGFuc3dlciBpcyBubyAoMiBTYW11ZWwgMjI6MzEpLiBCdXQgdG8gYXNzdW1lIEdvZCBjaG9vc2VzIG5vdCB0byBzaW4gaXMgYWxzbyBpbmNvcnJlY3QsIGFzIHRoYXQgc3RhdGVtZW50IGltcGxpZXMgdGhhdCB3aGF0IGlzIHNpbiBhbmQgd2hhdCBpcyBub3Qgc2luIGlzIG91dCBvZiBoaXMgZGVjcmVlLiBJdOKAmXMgbW9yZSBhY2N1cmF0ZSB0byBzYXkgdGhhdCBHb2QgPGk+ZG9lcyBub3Q8L2k+IHNpbi4gSXTigJlzIG5vdCB0aGF0IGhlIGxhY2tzIHRoZSBhYmlsaXR5IHRvLCBvciBkZWNpZGVzIG5vdCB0bywgYnV0IHRoYXQgaXQgY29udHJhZGljdHMgaGlzIGNoYXJhY3Rlci4gR29kIGlzIHRoZSBkZWZpbml0aW9uIG9mIGhvbGluZXNzLCBhYnNvbHV0ZSBwdXJpdHkgKEhhYmFra3VrIDE6MTMpLCBhbmQgaXQgaXMgdGhhdCBwZXJmZWN0IGNoYXJhY3RlciB0aGF0IGRldGVybWluZXMgd2hhdCBpcyBhbmQgd2hhdCBpcyBub3Qgc2luIChKYW1lcyA0OjEyKS4gSXTigJlzIG5vdCBhIG1hdHRlciBvZiBjaG9pY2UsIGJ1dCBvZiBjaGFyYWN0ZXIuIFRoZXJlLCBHb2QgaXMgb21uaXBvdGVudDogaGUgaGFzIHRoZSB1bHRpbWF0ZSBkZWNpc2lvbiwgdGhlIGFiaWxpdHkgdG8gZG8gLSBvciBub3QgZG8gLSBhbnl0aGluZyB0aGF0IGhlIGRlY2lkZXMuIEdvZCBpcyBwZXJmZWN0LCBhbmQgd2hhdCBpcyBub3QgR29kIGlzIHNpbi4gXFxuXFxuU28gaG93IGRvIHdlIGV4cGxhaW4gdGhlIGV4aXN0ZW5jZSBvZiBzaW4sIGlmIGl04oCZcyBub3Qgc29tZXRoaW5nIHRoYXQgR29kIHdvdWxkIHdhbnQsIGFuZCBub3Qgc29tZXRoaW5nIHRoYXQgR29kIGRvZXM/IFRvIGFuc3dlciB0aGF0LCBJ4oCZZCBsaWtlIHRvIHN0YXJ0IGZyb20gdGhlIGNvbmNlcHQgb2YgZnJlZSB3aWxsLlxcblxcbkZyZWUgd2lsbCBpcyBhIHJhdGhlciBjb21wbGljYXRlZCB0b3BpYyB0aGF0IGludGVydHdpbmVzIHdpdGggb3RoZXIgdG9waWNzIG9mIGRlYmF0ZSwgbGlrZSBwcmVkZXN0aW5hdGlvbi4gSG93ZXZlciwgZm9yIG5vdyBJ4oCZbGwganVzdCBmb2N1cyBvbiB0aGUgaWRlYSBvZiBmcmVlIHdpbGwgLSBvdXIgZnJlZWRvbSB0byBtYWtlIGNob2ljZXMgaW4gb3VyIGxpdmVzLiBXZSBrbm93IHRoYXQgd2UgaGF2ZSB0aGUgZnJlZWRvbSB0byBzaW4gb3IgdG8gbm90IHNpbiwgdGhlIGNob2ljZSB0byBmb2xsb3cgR29kIG9yIGRpc29iZXkgaGltLCBib3RoIGZyb20gc2NyaXB0dXJlIChHYWxhdGlhbnMgNToxMykgYW5kIGZyb23igKYgd2VsbCwgbGlmZS4gSXQgc2VlbXMgY29udHJhZGljdG9yeSwgdGhlbiwgdGhhdCBhIEdvZCB3aG8gZGVzaXJlcyBmb3IgZ29vZCB3b3VsZCBhbGxvdyBoaXMgY3JlYXRpb24gdGhlIGFiaWxpdHkgdG8gZG8gZXZpbC4gVG8gYW5zd2VyIHRoaXMsIEnigJlsbCBwb3NlIGFub3RoZXIgcXVlc3Rpb246IHdoeSB3b3VsZCBHb2QgZ2l2ZSB1cyBmcmVlZG9tIGluIHRoZSBmaXJzdCBwbGFjZT8gSXQgc2VlbXMgbGlrZSBjcmVhdGlvbiB3b3VsZCBiZSBhIGxvdCBzaW1wbGVyIGlmIGFsbCB3ZSBkaWQgd2FzIHdvcnNoaXAgdGhlIENyZWF0b3IsIGV2ZW4gaWYgd2UgY291bGRu4oCZdCBkbyBhbnl0aGluZyBlbHNlIC0gYW5kIGluIHRoZSBwcmVzZW5jZSBvZiBHb2QsIHdoeSB3b3VsZCB3ZSB3YW50IHRvIGRvIGFueXRoaW5nIGVsc2UgYW55d2F5cz9cXG5cXG5JIGd1ZXNzIHdoZW4gSSBwaHJhc2UgaXQgdGhhdCB3YXkgdGhlIGFuc3dlciBpcyByYXRoZXIgb2J2aW91cywgaWYgY2xpY2hlLiBcXG5cXG5Mb3ZlLlxcblxcbkdvZCBsb3ZlcyB1cyAoMSBKb2huIDQ6MTYsIFBzYWxtcyAxMzYpLCBhbmQgaGUgYWxzbyB3YW50cyB1cyB0byBsb3ZlIGhpbSAtIGJ1dCB3b3VsZCBpdCBiZSByZXF1aXRlZCBsb3ZlIGlmIHdlIGRpZG7igJl0IGhhdmUgYSBjaG9pY2Ugb3RoZXJ3aXNlPyBDUyBMZXdpcyBzYXlzIGl0IG5pY2VseSBpbiBNZXJlIENocmlzdGlhbml0eTogPGk+4oCcRnJlZSB3aWxsLCB0aG91Z2ggaXQgbWFrZXMgZXZpbCBwb3NzaWJsZSwgaXMgYWxzbyB0aGUgb25seSB0aGluZyB0aGF0IG1ha2VzIHBvc3NpYmxlIGFueSBsb3ZlIG9yIGdvb2RuZXNzIG9yIGpveSB3b3J0aCBoYXZpbmcuIEEgd29ybGQgb2YgYXV0b21hdGEgLSBvZiBjcmVhdHVyZXMgdGhhdCB3b3JrZWQgbGlrZSBtYWNoaW5lcyAtIHdvdWxkIGhhcmRseSBiZSB3b3J0aCBjcmVhdGluZy4gVGhlIGhhcHBpbmVzcyB3aGljaCBHb2QgZGVzaWducyBmb3IgSGlzIGhpZ2hlciBjcmVhdHVyZXMgaXMgdGhlIGhhcHBpbmVzcyBvZiBiZWluZyBmcmVlbHksIHZvbHVudGFyaWx5IHVuaXRlZCB0byBIaW0gYW5kIHRvIGVhY2ggb3RoZXIgaW4gYW4gZWNzdGFzeSBvZiBsb3ZlIGFuZCBkZWxpZ2h0IGNvbXBhcmVkIHdpdGggd2hpY2ggdGhlIG1vc3QgcmFwdHVyb3VzIGxvdmUgYmV0d2VlbiBhIG1hbiBhbmQgYSB3b21hbiBvbiB0aGlzIGVhcnRoIGlzIG1lcmUgbWlsayBhbmQgd2F0ZXIu4oCdPC9pPiBIZXJlIGlzIHRoZSBpbnRlcnNlY3Rpb24gb2YgZnJlZSB3aWxsIGFuZCBsb3ZlIC0gZm9yIHVzIHRvIHRydWx5IGxvdmUgSGltLCB3ZSBtdXN0IGNob29zZSBHb2QuIEdvZCBjcmVhdGVkIHVzIHdpdGggbG92ZSwgYW5kIGJlY2F1c2Ugb2YgdGhpcyBsb3ZlLCBoZSBpbiB0dXJuIGxldHMgdXMgY2hvb3NlIHdoYXQgdG8gbG92ZS5cXG5cXG5IZSBnaXZlcyB1cyB0aGlzIGNob2ljZSwgYnV0IGhlIGFsc28gZGVtb25zdHJhdGVzIGhpcyBsb3ZlIGluIGFuIGV2ZW4gbW9yZSBiZWF1dGlmdWwgd2F5IC0gYW5kIHRoaXMgaXMgd2hlcmUgdGhlIHJlZGVtcHRpb24gc3RvcnkgY29tZXMgaW4uIFRoZSBleGlzdGVuY2Ugb2Ygc2luIG5vdCBvbmx5IGFsbG93cyBmb3IgdXMgdG8gY2hvb3NlIEdvZCwgaXQgYWxzbyBhbGxvd3MgZm9yIEdvZCB0byBjaG9vc2UgdXMgLSBub3QgYSBjaG9pY2UgYmV0d2VlbiBodW1hbnMgYW5kIHNpbiwgc2luY2UgR29kIGlzIHBlcmZlY3QsIGJ1dCB0aGUgY2hvaWNlIG9mIGh1bWFucyA8aT5ldmVuIHRob3VnaDwvaT4gd2Ugc2luIChSb21hbnMgNTo4KS4gR29kIHNob3dlZCB1cyBoaXMgbG92ZSB0aHJvdWdoIHRoZSBnb3NwZWwgc3Rvcnk6IHRoZSBzZW5kaW5nIG9mIEplc3VzIGFuZCBoaXMgZGVhdGggYW5kIHJlc3VycmVjdGlvbiBtYWtlcyBpdCBwb3NzaWJsZSBmb3IgdXMgdG8gZXZlbiBoYXZlIHRoZSBwb3NzaWJpbGl0eSBvZiBjaG9vc2luZyBHb2QsIG9mIGNob29zaW5nIGEgcGVyZmVjdCBiZWluZyB3aGVuIHdlIGFyZSBzbyBmYXIgZnJvbSBwZXJmZWN0IG91cnNlbHZlcyAoMSBKb2huIDQ6OS0xMCkuIEhlIGRpZG7igJl0IGp1c3QgZ2l2ZSB1cyBmcmVlIHdpbGwgYW5kIHRoZW4gZGlwLCBoZSBnYXZlIHVzIGV4YWN0IGRpcmVjdGlvbnMgb24gaG93IHRvIGNob29zZSBoaW0gLSB0aHJvdWdoIGhpcyBzb24sIEplc3VzIENocmlzdCAoSm9obiAxNDo2KS4gVGhlIHJlY29uY2lsaWF0aW9uIG9mIG1hbiBhbmQgR29kIGlzIGEgdGVzdGFtZW50IG9mIGhvdyBtdWNoIGhlIGxvdmVzIGhpcyBjcmVhdGlvbiwgdGhhdCBoZSB3b3VsZCB0YWtlIG9uIGV2ZXJ5dGhpbmcgd2XigJl2ZSBkb25lIGFnYWluc3QgaGltIGp1c3Qgc28gd2UgY291bGQgaGF2ZSB0aGUgY2hhbmNlIHRvIGJlIHdpdGggaGltIGFnYWluLiBcXG5cXG5CdXQgZm9yIHRoZXJlIHRvIGJlIGEgY2hvaWNlLCB0aGVyZSBtdXN0IGJlIGNob2ljZXMuXFxuXFxuSW4gb3JkZXIgZm9yIHVzIHRvIGNob29zZSBHb2QsIHdlIGhhdmUgdG8gYmUgYWJsZSB0byBjaG9vc2UgPGk+bm90PC9pPiBHb2QgLSBvciwgc2luLiBHb2QgZGV0ZXN0cyBzaW4gKFBzYWxtIDExOjUsIFByb3ZlcmJzIDg6MTMpLCBkb27igJl0IGdldCBtZSB3cm9uZy4gU2luIGRvZXMgbm90IGhhdmUgYSBwbGFjZSBpbiBldGVybml0eSB3aXRoIGhpbS4gSG93ZXZlciwgYmVjYXVzZSBoZSBsb3ZlcyB1cywgaGUgYWxsb3dzIHVzIHRvIGhhdmUgdGhlIGNob2ljZSBvZiBHb2Qgb3Igc2luLiBXZSBrbm93IHRoYXQgR29kIHdhbnRzIHVzIHRvIGNob29zZSBoaW0gKDIgUGV0ZXIgMzo5KSAtIGhlIGRvZXNu4oCZdCB3YW50IGFueSBvZiBoaXMgY3JlYXRpb24gdG8gcGVyaXNoLiBCdXQgaW4gb3JkZXIgZm9yIHVzIHRvIGFjdHVhbGx5IGNvbWUgdG8gaGltLCB0byBhY3R1YWxseSBsb3ZlIGhpbSwgaGUgZ2l2ZXMgdXMgdGhlIGNob2ljZSB0byB0dXJuIGF3YXkgaW4gdGhlIGhvcGUgdGhhdCwgbGlrZSB0aGUgcHJvZGlnYWwgc29uLCB3ZSB3aWxsIGV2ZW50dWFsbHkgY29tZSBiYWNrIHRvIGhpcyBvcGVuIGFybXMuXFxuXFxuIDxpPltOb3csIEkgd2FudCB0byBxdWlja2x5IGFkZHJlc3Mgc29tZXRoaW5nIEkgbWVudGlvbmVkIGVhcmxpZXIsIGFuZCB0aGF0IGlzIHRoZSB0b3BpYyBvZiBwcmVkZXN0aW5hdGlvbi4gVGhlcmXigJlzIG11bHRpcGxlIHZlcnNlcyBvbiB0aGUgbXVsdGl0dWRlIEdvZCBjaG9vc2VzIGZvciBzYWx2YXRpb24gKFJvbWFucyA4OjI5LTMwLCBFcGhlc2lhbnMgMTo1KSB0aGF0IHBvaW50cyBvdXQgYSBzZWVtaW5nbHkgZ2xhcmluZyBwcm9ibGVtIHdpdGggbXkgYXJndW1lbnQ6IGlmIEdvZCBoYXMgYWxyZWFkeSBjaG9zZW4gd2hvIHdpbGwgY2hvb3NlIGhpbSwgd2hhdOKAmXMgdGhlIHBvaW50IGluIGFsbCBvZiB0aGlzPyBCZWNhdXNlIEkgZG9u4oCZdCB3YW50IHRvIHNwZW5kIHRvbyBtdWNoIHRpbWUgb24gdGhpcyB0b3BpYywgSSB3aWxsIGluc3RlYWQgcG9pbnQgdG8gc2V2ZXJhbCBhcnRpY2xlcyBieSBFbmR1cmluZyBXb3JkLCBDaHJpc3RpYW5pdHkgVUssIGFuZCBKb2huIFBpcGVyLCB3aGljaCBJIGVuY291cmFnZSB5b3UgdG8gcmVhZCBpZiB5b3XigJlyZSBpbnRlcmVzdGVkIGluIGhvdyBib3RoIG91ciBjaG9pY2VzIGFuZCBHb2TigJlzIHNvdmVyZWlnbnR5IHdvcmsgdG9nZXRoZXIuXTwvaT5cXG5cXG5GaW5hbGx5LCB3ZeKAmXZlIHJlYWNoZWQgYSBwb2ludCB3aGVyZSBJIGhhdmUgdHJpZWQgdG8gYW5zd2VyIHRoZSBvcmlnaW5hbCBxdWVzdGlvbiB0byB0aGUgYmVzdCBvZiBteSBhYmlsaXR5IC0gYSBwb2ludCB3aGVyZSBib3RoIGFuIGFsbC1nb29kIGFsbC1wb3dlcmZ1bCBHb2QgYW5kIHNpbiBleGlzdCwgdG9nZXRoZXIsIGludGVudGlvbmFsbHkuIE5vdyBJIHdhbnRlZCB0byB0YWxrIGEgYml0IGFib3V0IHN1ZmZlcmluZy4gUm9tYW5zIDU6My01IGFuZCBKYW1lcyAxOjItNCBib3RoIGluZGljYXRlIHRoYXQgc3VmZmVyaW5nIGlzIHVzZWQgdG8gZ3JvdyBvdXIgZmFpdGguIFdoZW4gd2Ugc3VmZmVyLCB3ZSBzZWUgYm90aCBvdXIgaGVscGxlc3NuZXNzIGFuZCBHb2TigJlzIHNvdmVyZWlnbnR5IC0gd2Ugc2VlIHRoZSBkZXB0aHMgb2Ygb3VyIHNlcGFyYXRpb24gYnV0IGFsc28gdGhlIGhlaWdodHMgaGUgcmVhY2hlcyB0byBvdmVyY29tZSBpdC4gQnV0IHdoYXQgYWJvdXQgdGhvc2Ugd2hvIHN1ZmZlciBidXQgYXJlbuKAmXQgQ2hyaXN0aWFuPyBJcyBpdCBzaW1wbHkgYSByZXN1bHQgb2Ygc2luIG9uIGVhcnRoIHRoYXQgdGhleSBhcmUgc2ltcGx5IHN1YmplY3QgdG8gc3VmZmVyaW5nPyBUaGlzIGlzIGEgcXVlc3Rpb24gSeKAmXZlIHN0cnVnZ2xlZCB3aXRoIGEgbG90LiBJZiBJIGhhZCB0byBhbnN3ZXIsIEkgdGhpbmsgdGhpcyBpcyB3aGF0IEkgd291bGQgc2F5IC0gR29kIHdpc2hlcyBmb3IgdXMgdG8gY2hvb3NlIGhpbS4gSWYgd2Ugd2VyZSBhbGxvd2VkIHRoZSBjaG9pY2UgdG8gc2luLCBidXQgZGlkbuKAmXQgZmFjZSBzdWZmZXJpbmcsIHdlIHdvdWxkIG5ldmVyIGtub3cgdGhlIGNvbnNlcXVlbmNlcyBvZiBub3QgY2hvb3NpbmcgR29kLiBJbiBhIHdvcmxkIGRlc2lnbmVkIGZvciB1cyB0byBjaG9vc2UgSGltLCB3ZSBtdXN0IGJlIGF3YXJlIG9mIHdoYXQgaGFwcGVucyB3aGVuIHdlIGRvbuKAmXQgLSBhbmQgdGh1cywgc3VmZmVyaW5nLlxcblxcbkRvIEkgbGlrZSB0aGF0IGFuc3dlcj8gTm90IHJlYWxseS4gU3VmZmVyaW5nIHN1Y2tzLCBubyBtYXR0ZXIgaG93IHlvdSBsb29rIGF0IGl0LiBJIHN0aWxsIGhhdmUgYSBsb3Qgb2YgZG91YnRzIGFuZCBhIGxvdCBvZiBxdWVzdGlvbnMsIG5vIG1hdHRlciBob3cgY29udmluY2luZyBvciB1bmNvbnZpbmNpbmcgSSBzb3VuZGVkIHdoaWxlIHdyaXRpbmcgdGhpcy4gSXTigJlzIHNvbWV0aGluZyBJ4oCZbGwgYXNrIEdvZCB0byBleHBsYWluIHdoZW4gSeKAmW0gc3RhbmRpbmcgYmVmb3JlIGhpbSBpbiBldGVybml0eSAtIGJ1dCB1bnRpbCB0aGVuLCB0aGlzIGlzIHdoYXQgSSBjYW4gc2F5IGluIGFsbCBlYXJuZXN0eS5cXG5cXG5JIGJlbGlldmUgR29kIGxvdmVzIGhpcyBjcmVhdGlvbiAodXMpLiBJIGJlbGlldmUgR29kIGFsc28gd2FudHMgdXMgdG8gbG92ZSBoaW0gb2Ygb3VyIG93biB2b2xpdGlvbi4gQmVjYXVzZSBvZiB0aGlzLCBoZSBhbGxvd3MgZm9yIHRoZSBleGlzdGVuY2Ugb2Ygc2luIHNvIHRoYXQgd2UgY2FuIG1ha2Ugb3VyIG93biBjaG9pY2Ugb24gd2hldGhlciB0byBsb3ZlIEdvZCBvciBsb3ZlIHRoZSB3b3JsZC4gSSBiZWxpZXZlIHRoYXQgR29kIGRlbW9uc3RyYXRlZCBoaXMgbG92ZSB0aHJvdWdoIHRoZSBsaWZlLCBkZWF0aCwgYW5kIHJlc3VycmVjdGlvbiBvZiBKZXN1cyBDaHJpc3QuXFxuXFxuSSBiZWxpZXZlIHRoYXQgR29kLCBpbiBoaXMgYWxsLWdvb2QsIGFsbC1wb3dlcmZ1bCBuYXR1cmUsIGV4aXN0cyAtIGFuZCBzbyBkb2VzIHNpbiAoZm9yIG5vdykuIE1heWJlIGl04oCZcyBiZWNhdXNlIG9mIHdoYXQgSSBzYWlkLCBvciBtYXliZSBpdOKAmXMgZm9yIGEgdG90YWxseSBkaWZmZXJlbnQgcmVhc29uLCBidXQgZWl0aGVyIHdheSBJIGJlbGlldmUuIEkgYmVsaWV2ZSBiZWNhdXNlIEnigJl2ZSBtYWRlIG15IGNob2ljZSAtIHRoZSBjaG9pY2UgdG8gZm9sbG93IEdvZC5cXG5cXG5Ob3cgSSBoYXZlIGEgcXVlc3Rpb24gZm9yIHlvdS5cXG5cXG5XaGF0IGRvIHlvdSBjaG9vc2U/IiwiU2x1ZyI6ImZhbGwtMjMvZ29kLS1zaW4tdGhlLXByb2JsZW0tb2YtZXZpbCIsIklzc3VlIjoiRmFsbCAyMyIsIlRpdGxlIjoiR29kICsgU2luOiBUaGUgUHJvYmxlbSBvZiBFdmlsIiwiQXV0aG9yIjoiUmFwaGFlbCBDaGVuZyIsIlRhZ3MiOltdLCJJbWFnZSI6Imh0dHBzOi8vZmlyZWJhc2VzdG9yYWdlLmdvb2dsZWFwaXMuY29tL3YwL2IvYWdvcmEtY2EzMWIuYXBwc3BvdC5jb20vby9GMjMlMjBQaWVjZSUyMFRpdGxlJTIwQ2FyZHMlMkZmMjN0aXRsZWNhcmQtcmFwaC1jaGVuZy5qcGc/YWx0PW1lZGlhJnRva2VuPTE1YTdkZjYwLWMzNDItNDJkYi1hYTI5LWZmOTQ1MWIzYTRhYiJ9LHsiU2x1ZyI6ImZhbGwtMjMvd2h5LWxvdmUiLCJDb250ZW50X1R5cGUiOiJQb2VtIiwiRGF0ZSI6IkRlY2VtYmVyIDgsIDIwMjMiLCJJc3N1ZSI6IkZhbGwgMjMiLCJBdXRob3IiOiJTaW1vbiBSdWl6IiwiSW1hZ2UiOiJodHRwczovL2ZpcmViYXNlc3RvcmFnZS5nb29nbGVhcGlzLmNvbS92MC9iL2Fnb3JhLWNhMzFiLmFwcHNwb3QuY29tL28vRjIzJTIwUGllY2UlMjBUaXRsZSUyMENhcmRzJTJGZjIzdGl0bGVjYXJkLXNpbW9uLXJ1aXoucG5nP2FsdD1tZWRpYSZ0b2tlbj1jZGMwODQ1Yy0zM2ZmLTRiZmUtYWE1YS05YjMwZjAzMzJmZjgiLCJUaXRsZSI6IldoeSBsb3ZlIiwiVGFncyI6W10sIlRleHQiOiI8ZGl2IHN0eWxlPVwiIGRpc3BsYXk6IGZsZXg7IGZsZXgtZGlyZWN0aW9uOiByb3c7IFwiID48Yj4gPGRpdiBzdHlsZT1cIiB3aWR0aDogNTAlXCI+V2h5IGRvIFlvdSBsb3ZlIG1lPyA8L2I+XFxuXFxuV2h5IGRvIFlvdSBsb3ZlIG1lP1xcbkl0IGRvZXNu4oCZdCBtYWtlIG11Y2ggc2Vuc2VcXG5Zb3XigJlyZSBhbiBhbG1pZ2h0eSBHb2RcXG5J4oCZbSBhbiBvcmRpbmFyeSBwZXJzb25cXG5ZZXQgWW91IGxvdmUgbWVcXG5cXG5JIGp1c3QgZG9u4oCZdCB0aGluayBJ4oCZbSB3b3J0aHlcXG5J4oCZbSBub3QgYWxsIHRoYXQgZ3JlYXRcXG5JIGZhaWwgYXQgZXZlcnl0aGluZ1xcbkFuZCBJIGNhbuKAmXQgZXNjYXBlIHNpblxcbllldCBZb3UgY2hvb3NlIG1lXFxuXFxuSSBkb27igJl0IGdpdmUgWW91IGVub3VnaCB0aW1lXFxuSSBmYWxsIGFzbGVlcCBkdXJpbmcgc2VybW9uc1xcbkdldCBkaXN0cmFjdGVkIHdoZW4gSSBwcmF5XFxuQW5kIEkgaWdub3JlIFlvdVxcbllldCBZb3UgdmFsdWUgb3VyIHRpbWVcXG5cXG5XZSB3YW50IGRpZmZlcmVudCB0aGluZ3NcXG5JIHdhbnQgY29tZm9ydFxcbkkgd2FudCB0byBob2xkIGdydWRnZXNcXG5JIHdhbnQgdG8gZm9jdXMgb24gbWVcXG5ZZXQgWW91IHdhbnQgbXkgaGVhcnRcXG5cXG5XZeKAmXJlIG5vdCB2ZXJ5IGNvbXBhdGlibGVcXG5Zb3UgbmV2ZXIgZ2l2ZSBtZSB3aGF0IEkgd2FudFxcbllvdSBhbHdheXMgdHJ5IHRvIGNoYW5nZSBtZVxcbkFuZCBZb3UgbmV2ZXIgc3BlYWsgdG8gbWVcXG5ZZXQgWW91IGRlc2lyZSBtZVxcblxcblRoaXMgbG92ZSBkb2VzbuKAmXQgbWFrZSBzZW5zZVxcbknigJl2ZSBjdXJzZWQgWW91XFxuSeKAmXZlIHJ1biBhd2F5IGZyb20gWW91XFxuSeKAmXZlIGhhdGVkIFlvdVxcbllldCBZb3UgZGllZCBmb3IgbWU8L2Rpdj48ZGl2PlxcblxcblxcbjxiPiBXaHkgZG8gSSBsb3ZlIFlvdT8gPC9iPlxcblxcbldoeSBkbyBJIGxvdmUgWW91P1xcbkl0IGRvZXNu4oCZdCBtYWtlIG11Y2ggc2Vuc2VcXG5Zb3XigJlyZSBzb21ldGhpbmcgSSBjYW7igJl0IHNlZVxcbknigJltIG5vdCBldmVuIHN1cmUgWW91IGV4aXN0XFxuWWV0IEkgbG92ZSBZb3VcXG5cXG5JIGp1c3QgZG9u4oCZdCB0aGluayBZb3XigJlyZSB3b3J0aCBpdFxcbllvdeKAmXJlIG5vdCB3aGF0IEkgdGhvdWdodFxcbllvdSBleHBlY3Qgc28gbXVjaFxcbkFuZCBZb3UgaGF2ZSBzbyBtYW55IHJ1bGVzXFxuWWV0IEkgY2hvb3NlIFlvdVxcblxcbkkgZ2l2ZSBZb3Ugc28gbXVjaCB0aW1lXFxuQWxsIHRoZXNlIGNodXJjaCBnYXRoZXJpbmdzXFxuU3Bpcml0dWFsIGRpc2NpcGxpbmVzXFxuQW5kIHN1cnJlbmRlcmluZyBteSBsaWZlXFxuWWV0IEkgdmFsdWUgb3VyIHRpbWVcXG5cXG5XZSB3YW50IGRpZmZlcmVudCB0aGluZ3NcXG5JIGRvbuKAmXQgd2FudCB0byBiZSBnZW5lcm91c1xcbkkgZG9u4oCZdCB3YW50IHRvIGZvcmdpdmVcXG5JIGRvbuKAmXQgd2FudCB0byBidWlsZCBZb3VyIGtpbmdkb21cXG5ZZXQgSSB3YW50IFlvdXIgaGVhcnRcXG5cXG5XZeKAmXJlIG5vdCB2ZXJ5IGNvbXBhdGlibGVcXG5JIG5ldmVyIGZvbGxvdyBZb3VyIGNvbW1hbmRzXFxuSeKAmW0gbm90IHdobyBZb3Ugd2FudCBtZSB0byBiZVxcbkFuZCBJIGNhbuKAmXQgaGVhciBZb3VcXG5ZZXQgSSBkZXNpcmUgWW91XFxuXFxuVGhpcyBsb3ZlIGRvZXNu4oCZdCBtYWtlIHNlbnNlXFxuWW91IGJyaW5nIGhhcmRzaGlwXFxuWW91IG1ha2UgbWUgc2FjcmlmaWNlXFxuWW91IHR1cm4gdGhlIHdvcmxkIGFnYWluc3QgbWVcXG5ZZXQgSSBsaXZlIGZvciBZb3U8L2Rpdj48L2Rpdj4ifSx7IkRhdGUiOiJEZWNlbWJlciA4LCAyMDIzIiwiVGl0bGUiOiJUaGUgT25lIHdobyB3aWxsIE5ldmVyIExlYXZlIiwiU2x1ZyI6ImZhbGwtMjMvdGhlLW9uZS13aG8td2lsbC1uZXZlci1sZWF2ZSIsIlRhZ3MiOltdLCJDb250ZW50X1R5cGUiOiJQb2VtIiwiSW1hZ2UiOiJodHRwczovL2ZpcmViYXNlc3RvcmFnZS5nb29nbGVhcGlzLmNvbS92MC9iL2Fnb3JhLWNhMzFiLmFwcHNwb3QuY29tL28vRjIzJTIwUGllY2UlMjBUaXRsZSUyMENhcmRzJTJGZjIzdGl0bGVjYXJkLXN0ZXBoZW4tbm9oLmpwZz9hbHQ9bWVkaWEmdG9rZW49YWRlZWRlM2YtYWQ5Ny00MzFiLTgyOGMtOGRhNGQzYmJiNzc3IiwiVGV4dCI6IkFzIEF1dHVtbiBsZWZ0IGFuZCB0aGUgbGVhdmVzIGhhZCB3aXRoZHJhd25cXG5BbGwgdmFsdWUgYW5kIGdsYW1vdXIgaGFkIGdvbmVcXG5MaWZlbGVzcyBhbmQgbG9hdGhlZCwgYSB0cmVlIHN0YW5kcyBhbG9uZSBhbmQgc21hbGxcXG5JdHMgaWRlbnRpdHkgYW5kIGJlYXV0eSBnb25lIGF0IGEgbG9uZSB3aW50ZXLigJlzIGNhbGxcXG5cXG5BbGwgdGhhdCByZW1haW5lZCB3YXMgYSBzbmFnIG9mIHdvb2QgY292ZXJlZCBpbiBmcm9zdFxcblRoZSBzYW1lIHdvb2QgdGhhdCBsYWlkIEhpbSBuYWlsZWQgdG8gdGhhdCBjcm9zc1xcbk9oLCB3b2UgaXMgdGhlZSwgSSBhbSBhIHNpbm5lciB3aXRoIG5vIHdvcnRoXFxuT25lIHRoYXQgaGFkIHdpc2hlZCB3YXMgbmV2ZXIgZ2l2ZW4gYmlydGhcXG5cXG5XaGF0IGhvcGUgY291bGQgYmUgZm91bmQgYXMgaXQgY3JpZWQgb3V0IGluIGFnb255P1xcbkFsb25lIGFuZCBzb3Jyb3dmdWwgYXMgaXQgZ3JldyBkaXNkYWluIGZvciByZWFsaXR5XFxuQXMgaXQgdGhvdWdodCBpdCBsb3N0IGFsbCBwZWFjZSwgam95LCBhbmQgdHJhbnF1aWxpdHksXFxuVGhlcmUgZGVzY2VuZGVkIFRoZSBEb3ZlLCBjb21pbmcgZG93biB0byByZXN0IGluIHRoZWVcXG5cXG5BbmQgdGhlcmUgaXQgaGVhcmQgYSB2b2ljZSBzcGVha2luZyB0byBhcHBlYXNlXFxu4oCcWW91IGFyZSBteSBTb24sIHdob20gSSBsb3ZlOyB3aXRoIFlvdSBJIGFtIHdlbGwgcGxlYXNlZOKAnVxcbkluIHRoaXMgZHJ5IGFuZCBiYXJyZW4gbGFuZCwgWW91IGhhdmUgc2VudCB0byBtZSB0aGUgU29uXFxuQW5kIEhlIGhhcyBnaXZlbiBtZSB3b3J0aCB3aGVuIEkgZmVsdCBJIGhhZCBub25lXFxuXFxuSSB3aWxsIHJlbWFpbiBpbiBZb3VyIGxvdmUgdGhyb3VnaG91dCBhbGwgdGhlIHVuY2VydGFpbnR5XFxuQXMgd2Ugd2FsayBoYW5kLWluLWhhbmQgdGhyb3VnaCBqb3lzIGFuZCBhZHZlcnNpdGllc1xcbkluIGhvcGVmdWwgdHVuZXMgYW5kIGdsZWVmdWwgd29yc2hpcCwgSSBidXJzdCBvdXQgc2luZ2luZ1xcbkNoZWVyZnVsIGZvciBJIGtub3cgdGhhdCB0aGlzIGlzIGEgbmV3IGJlZ2lubmluZ1xcblxcblNwcmluZyBjYW1lLCBhbmQgVGhlIERvdmUgcmVtYWluZWQgaW4gbWUgYWxsIHRoZSBzYW1lXFxuSSBiZWNhbWUgZXhjaXRlZCB0byBzZWUgd2hhdCBmcnVpdCBJIHdvdWxkIHN1c3RhaW5cXG5Zb3UgaGF2ZSBnaXZlbiBtZSBwdXJwb3NlIGFuZCBnaXZlbiBtZSBsaWZlLFxcbkFuZCBpbiBZb3UgSSBoYXZlIGZvdW5kIGFsbCBteSBtYXJ2ZWxvdXMgZGVsaWdodFxcblxcblRoZSBEb3ZlIGJ1aWx0IGl0cyBob21lIGFuZCBsYXkgd2l0aCBtZSB0aWxsIHJlc3RcXG5JZGVudGl0eSByZWZvdW5kIGFuZCBiZWF1dHkgdG8gYXR0ZXN0XFxuVGhhdCBJIGFtIEJyb2tlbiwgYnV0IGFsaXZlLCBzdGFuZGluZyB3aXRoIGNlcnRhaW50eVxcbkZvciBIZSBoYXMgc293biBtZSBpbiBnb29kIHNvaWwgdG8gbGl2ZSBmb3IgZXRlcm5pdHkiLCJBdXRob3IiOiJTdGVwaGVuIE5vaCIsIklzc3VlIjoiRmFsbCAyMyJ9XQ==","status":200,"url":"https://agora-backend-sxd6.onrender.com/getJournalEntries"},"revalidate":31536000,"tags":[]}