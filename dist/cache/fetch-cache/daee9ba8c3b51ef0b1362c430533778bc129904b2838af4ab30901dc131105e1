{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=86400","cf-cache-status":"DYNAMIC","cf-ray":"8327cd7a784e0249-ORD","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=utf-8","date":"Fri, 08 Dec 2023 20:36:48 GMT","etag":"W/\"6d4e-L7whNmvORBLwJ5B9+hjVNIk9Z7I\"","rndr-id":"cd6dd6f9-8520-4f38","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding","x-powered-by":"Express","x-render-origin-server":"Render"},"body":"","status":200,"url":"https://agora-backend-sxd6.onrender.com/getJournalEntries"},"revalidate":31536000,"tags":[]}