{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=86400","cf-cache-status":"DYNAMIC","cf-ray":"8b5b2141eb4ec459-EWR","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=utf-8","date":"Mon, 19 Aug 2024 15:20:50 GMT","etag":"W/\"15288-bXyn7QRZs0b/A/hGl/JRYYI8dMU\"","rndr-id":"9e3f2f62-974b-4d0c","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding","x-powered-by":"Express","x-render-origin-server":"Render"},"body":"[{"Date":"December 8, 2023","Image_Credit":"Photo by Chris Moon","Title":"Q&A with a Sinner: Is It Good?","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/F23%20Piece%20Title%20Cards%2Ff23titlecard-abel-chen.jpg?alt=media&token=9b90ed22-1a37-4648-8c72-9fd65c5c357e","Slug":"fall-23/qa-with-a-sinner-is-it-good","Issue":"Fall 23","Text":"<b>Part 1: What I Hate About You</b>\\n<i>Is it good to be purposeful with every action? </i>\\nIn the beginning, I simply thought, “I want to live with the purpose God gave me!”\\n<i>What happened in the end? </i>\\nSomeone told me, “You know what I hate about you? I hate that everything you do needs to have a purpose. You always need a reason to do every little action.”\\n<i>What reflections did you have? </i>\\nI had to ask myself, “Why am I doing these actions?”\\n<i>And? </i>\\nI had to admit that I was doing this to justify myself.\\n<i>Where is God in all this? </i>\\nThe Father is purposeful in lavishing love upon His creation. That’s good. \\n\\n<b>Part 2: The House of Sand</b>\\n<i>Is it good to do what a godly person would do? </i>\\nIn the beginning, I simply thought, “I want to do what Jesus would do!”\\n<i>What happened in the end? </i>\\nI believed godliness to be a means of gain, a persona I had to build and uphold to keep my house of sand from crumbling. I showed my faith to bask in affirmation from others without accepting where I was truly at.\\n<i>What reflections did you have? </i>\\nI had to ask myself, “Why am I trying so hard to emulate the perceived ‘godly’ person?”\\n<i>And? </i>\\nI had to admit that I was creating my own image of what a godly person would do and chased after that.\\n<i>Where is God in all this? </i>\\nThe Son lived a self-sacrificial life in obedience to chase after the Father. That’s good.\\n\\n<b>Part 3: A Vine and Two Eagles</b> \\n<i>Is it good to have a growth mindset? </i>\\nIn the beginning, I simply thought, “I want to grow as a vine that abides in Christ!”\\n<i>What happened in the end? </i>\\nJust as we repeat the footsteps of the Israelites, I was the wandering vine*: I thought that growth always means progress.\\n<i>What reflections did you have? </i>\\nI had to ask myself, “Why am I seeking to grow?”\\n<i>And? </i>\\nI had to admit that I sought my comfort and security in the motions of making progress as a Christian.\\n<i>Where is God in all this? </i>\\nThe Holy Spirit grows us to bear good fruit for our Vinedresser. That’s good.\\n\\n\\n\\n*Ezekiel 17 contains a parable about a vine and two eagles. In this parable, a great eagle represents Babylon and another eagle symbolizes Egypt. The vine refers to the kingdom of Judah. The chapter describes how the vine was planted by the Babylon eagle in a bountiful place but foolishly stretched out its roots toward the eagle of Egypt. The stretching roots represent the Judeans' allegiance with Egypt in opposition to Babylon. This was in direct rebellion with God’s command to settle down and prosper in Babylon.","Author":"Abel Chen","Content_Type":"Personal Essay","Theme":"Debut"},{"Slug":"fall-23/im-home","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/F23%20Piece%20Title%20Cards%2Ff23titlecard-alex-hom.JPG?alt=media&token=bdc22d9e-0408-4cba-b536-9fae8fd0ed2f","Theme":"Debut","Video":"https://www.youtube.com/embed/GvFKRGdtp90","Author":"Alex Hom","Title":"I'm Home","Issue":"Fall 23","Text":"<b>VERSE 1</b> \\nSometimes I feel like I’m lost without a home\\nSometimes I feel like I simply don’t belong\\nI wanna be held, to be heard, to be loved, to be whole\\nIf you really cry for me, why do I still feel cold? \\n\\n<b>VERSE 2</b>\\nSometimes my mind is like scarlet on white snow\\nSometimes my heart is the valley of dry bones\\nMy soul is afflicted, too broken for hope, the distance too wide, I’m too far to come home\\nSo I push you away just to pity myself once more\\n\\n<b>PRE-CHORUS</b>\\nNa, that ain’t the truth\\nThis is what you’ve shown me\\nThis what you’ve shown me\\n\\n<b>CHORUS</b> \\nHere in your love is the warmest I’ve been\\nI’m swaddled in fleece, suffocating\\nIn the dead of night you comfort me\\nThere's nowhere else I’d rather be \\n\\n <b>BRIDGE</b> \\nI’ve been home before\\nI forgot how good it felt\\nI forgot how good it felt\\nSat in these rows before\\nI forgot how good it felt\\nI forgot how good it felt\\nI’ve been home before\\nI forgot how good it felt\\nI forgot how good it felt\\nSat in these rows before\\nI forgot how real you are\\nI forgot how real you are","Content_Type":"Song","Image_Credit":"Photo by Chris Moon","Audio":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/F23%20Song%20Audio%2FI'm%20Home%20Final%203.1db.wav?alt=media&token=4ca5eca4-fa5a-40db-8d06-08cf878df110","Date":"December 8, 2023"},{"Text":"father,\\n\\nwhat is it that you want from Me?\\nbecause I can do it, and I will\\nif what you order is just to listen\\nthen here I am; silent and waiting, still\\n\\nstill, I’m stagnant, promising empty echoes from my lips\\nthe heart-shaped stone i bear won’t move\\nuse me as an instrument at will\\nbut how, when my soul is out of tune?\\n\\nobedience and reverence, piety and devotion\\nabove all these, what more shall i do?\\ni’m selfish and weak, anxious and broken\\nhide this, i try, to keep it from you\\n\\nwith all habitual inclinations\\nthat make Me proud,\\nso that you would be pleased, and to make you proud\\n\\n- your son\\n\\n<div style=text-align:right;><p>my dear son,\\n\\nwhen you ask what i want\\nit’s not something you can do\\nyou wait without patience\\nevery toiled endeavor, not endued\\n\\ni know what you want\\nyou want to be worthy\\nyou want to be better\\n\\ndo you know what He wants?\\nHe wants to love you\\nHe wants to be together\\n\\nwith prayers and pleas, the best things i can give\\nand for yours to Him, nothing more can i ask\\n\\n- your dad\\n\\n</p></div>Father,\\n\\nmy walls of glass shatter, and now reveal\\nwhat i’ve tried to hide from me, present to You\\nYou are my strong fortress; You are my comforting home\\netch Your words upon my heart, no longer stone\\nYour presence everlasting, invites me to confide\\nmy strivings cease and in You i abide\\n\\nas life flits through its seasons\\nYou turn my cold, tarrying winter to a warm, yearning spring\\nthrough it all, because of You, i will be; rejoicing and moved, still\\nYour song is the melody my heart will sing\\n\\nwith grace so sufficient,\\na love so kind,\\nin my weakness Your power is known\\n\\ni am Your child\\nYou are my Father\\nwhat i want from You, is You alone\\n\\n- Your son","Theme":"Debut","Issue":"Fall 23","Title":"a letter to my Father","Image_Credit":"Stock Photo","Author":"Chris Moon","Content_Type":"Poem","Date":"December 8, 2023","Slug":"fall-23/a-letter-to-my-father","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/F23%20Piece%20Title%20Cards%2Ff23titlecard-chris-moon.jpg?alt=media&token=02b8a78a-c292-40fa-9003-3cfd525779f8"},{"Image_Credit":"Photo by Esther Shen","Content_Type":"Poem","Text":"i wrestle my way through the crowd\\noh why with small stature was i endowed\\nmy lungs gasping, grasping for breath\\nstill one thought fills my head\\ni just want to see You\\n\\nthis thought i hold as i clamber up the tree\\nletting go of all my precious dignity\\nfor among probing eyes darkened with contempt\\ni will be perfectly content\\nif i can just see You\\n\\nand upon the tree You see me\\nout of the darkness You pull me\\nwith eyes that dance with flame\\nand words my ears have never heard\\n“I want to see you”\\n\\ni, with my prideful heart\\ni, with my broken spirit\\ni, the sinner of sinners\\nhiding in the deepest of shadows\\nwho am i that You would see me?\\n\\nYou, with glory beyond compare\\nYou, with grace that never ends\\nYou, the King above all kings\\nruling from a throne of perfect love\\nwho am i that You would seek me?\\n\\nno, it’s not because of who i am\\nbut because of who You are\\nYou, who would choose to enter my house\\nand walk with me for all eternity—\\noh what a sight, my soul stirs and sings\\n\\nhow many nights have i wallowed in shame?\\nthirsting for glory yet never embracing my name\\nlurking in a castle built on sand and fears\\nbut You alone see all my silent tears\\nand wipe them gently from my face\\n\\nas You hold my hand through these waters\\nwaves of grace wash me pure\\nborn again, righteous as the name i wear*\\nto dwell in Your house, now my one desire\\nto seek Your face all the days of my life\\n\\nmy heart longs for assurance\\nin bright eyes, indulging words\\nephemeral glints in a desert world\\nbut You are the well that never runs dry\\nso may Your eyes be the only ones that satisfy\\n\\nthough i am small and weak\\nmay my weakness magnify Your majesty\\nmay my little lungs burst!\\nunbridled delight in Your presence\\nas i gaze upon my beautiful Savior\\n\\nevery breath You’ve gifted to me\\nevery breath i pour in melody\\nto my dearest friend\\nto my loving Father\\nto the One who saw me in that tree\\n\\n<i> And Jesus said to him, “Today salvation has come to this house, since he also is a son of Abraham. For the Son of Man came to seek and to save the lost.”\\n~Luke 19:9-10 </i>\\n\\n* Zacchaeus’ name means “pure” or “righteous”","Author":"Esther Shen","Theme":"Debut","Slug":"fall-23/zacchaeus-song","Date":"December 8, 2023","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/F23%20Piece%20Title%20Cards%2Ff23titlecard-esther-shen.jpg?alt=media&token=80301b65-b964-46fb-a158-98d8298b54b1","Title":"Zacchaeus' Song","Issue":"Fall 23"},{"Author":"Ethan Ng","Image_Credit":"Stock Photo","Video":"https://www.youtube.com/embed/5m95O3VpnSA","Text":"<b>VERSE 1</b>\\nGod over all time\\nHeaven and earth are His reign\\nHe finds me in my wandering\\nAnd calls me to His gentle eyes\\n\\n<b>VERSE 2</b>\\nHear, His tender voice\\nIn stillness I call His Name\\nMy heart is glad in His embrace\\nIn His presence I find my home\\n\\n<b>CHORUS</b>\\nMy soul waits for the One who saves\\nFor my dearest friend\\nWho lifts all the weight\\nOff my heavy, burdened heart\\nMy soul waits for the One who gave\\nHis eternity to be one with me\\nThrough the steadfast love of the Father\\nOf the Father\\n\\n<b>BRIDGE</b>\\nHe is here\\nHe is here\\nHe is here\\nHe is here\\nMy soul waits\\nMy soul seeks\\nMy soul finds\\nThat He is here\\nAll this time\\nI was lost\\nJoy I’ve found\\nCause He is here","Title":"Steadfast Love","Audio":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/F23%20Song%20Audio%2FSteadfast%20Love%20-%2012_5_23%2C%203.43%E2%80%AFPM.mp3?alt=media&token=eada98db-ecbf-45a4-a969-ba99a4f2c46a","Date":"December 8, 2023","Theme":"Debut","Issue":"Fall 23","Content_Type":"Song","Slug":"fall-23/steadfast-love","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/F23%20Piece%20Title%20Cards%2Ff23titlecard-ethan-ng.jpg?alt=media&token=1d055e0d-74dd-4e50-a013-85eefc69f416"},{"Content_Type":"Poem","Issue":"Fall 23","Author":"Olivia Hu","Title":"you","Text":"<i>\"For now we see in a mirror dimly, but then face to face\"</i>  — 1 Corinthians 13:12 (ESV) <br /> <br />i’m surrounded by you\\nin mirrors, in windows, every glancing surface\\nyou haunt the glass\\ni look at you, scrutinize, and curdle with reproach\\nyet,\\nyou are mesmerizing\\nyou mirror my movements and meet my eyes;\\nyou preoccupy me\\nwhen i look closely,\\nthe glass is opaque with your burdens and desires—\\na distraction\\n\\n\\ni’m surrounded by you\\nin voices, bodies, outstretched hands\\ntogether you’re my parachute, but still furled; your vibrant breadth undiscovered\\ni look at you from behind glass walls\\nmy ghostly reflection, superimposed\\na film of grime and conceit, obscuring your beauty\\nbut,\\nif i look closely, if i forget myself,\\nthe glass vanishes,  \\nand we are face to face (finally)\\ni’m falling, hands touch, and \\nyour colors unfurl across the sky\\n\\n\\ni’m surrounded by You\\nin morning glory, the sunrise; in pure, unruffled air\\nYour presence is breathable, fragrant, yet breathtaking\\ni look at this world, unveiled by Your light,\\nat creation, which blushes with reverent joy\\nand,\\nmy reflection, a mere memory, glimmers and fades\\nchildren laugh and embrace, Your Ghost dwelling among them\\nas i look closely,\\nbodies and barriers disappear; Your radiance shines through\\nlike blooming parachutes, You fill up the sky\\n\\nand i’m mesmerized, again","Slug":"fall-23/you","Image_Credit":"Stock Photo","Date":"December 8, 2023","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/F23%20Piece%20Title%20Cards%2Ff23titlecard-olivia-hu.jpeg?alt=media&token=7696aa49-ab30-4816-bf7f-9c877fb9da85","Theme":"Debut"},{"Theme":"Debut","Content_Type":"Academic Essay","Author":"Raphael Cheng","Issue":"Fall 23","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/F23%20Piece%20Title%20Cards%2Ff23titlecard-raph-cheng.jpg?alt=media&token=15a7df60-c342-42db-aa29-ff9451b3a4ab","Date":"December 8, 2023","Text":"<b>If God is all good, then he must not want his creation to suffer. If God is all powerful, then he must have the means to make it so. Why, then, is there sin in this world? Why is there suffering? Does the existence of sin contradict the existence of God?</b>\\n\\nThis is, in its simplest form, the problem of evil. Maybe you’ve never thought of it in this way before, but I’m sure something similar has at least crossed your mind at some point - that question of why God would allow for sin and suffering to exist. It definitely crosses my mind all the time. It’s a question that people have been trying to answer since before Christ came to earth - take Greek philosopher Epicurus, who said (in paraphrase): <i>\"Is God willing to prevent evil, but not able? Then he is not omnipotent. Is he able, but not willing? Then he is malevolent. Is he both able and willing? Then from whence comes evil?\"</i>\\n\\nWhile I don’t believe that there will ever be a perfect satisfactory answer to this question until we are standing face to face with God, I do think it’s one that many struggling in their faith will come across at one point or another. In writing this, I hope to provide my thoughts on this question and how I reconciled it in my own mind. My answer is not, in any shape or form, objective truth: It is what I believe based on scripture and my current, limited understanding of God’s character. I could be completely wrong, though I would hope not. It’s not meant to be a definite answer either, simply a starting point to help you think.\\n\\nBefore I begin my reasoning, there are some points of importance that have to be established. First, I am not writing this to prove the existence of God - I am trying to prove that the existence of the all-powerful, all-knowing, and all-good God that I believe in and the existence of sin is not contradictory. As such, the basis of my reasoning asserts that both God and sin exist on Earth, which I believe as a Christian to be true, and upon which I build my argument reconciling these two existences.\\n\\nSecondly, I will use scripture to support definitions or lines of reasoning, which some may consider circular logic. However, looking at the verses will reveal that most of them simply provide a scriptural basis for the premises that I’m presenting: for example, Hebrews 4:13, relaying the omniscience of God, which is a characteristic of His we are already proposing to be true in order to set up the problem of evil. In cases where this is not evident, scripture is used to provide clarification for otherwise more unclear matters and holds true because of the basis of the problem - since God is all-good and all-knowing, and His Word reflects his character, it can be held as truth. This point is probably easy to disagree with me on, and I’m sure some will, so I will try and write this so that it holds to just reasoning as well.\\n\\nFinally, you may notice that as I’m tackling this problem I’ll be mostly focusing on the coexistence of God and sin in particular. Yes, this can be seen as a simplification of the argument. However, I chose to use sin as an overarching term for suffering, death, and the general “bad” in the world because it allows for a more direct approach to the issue rather than trying to tackle all the aspects of wrong that we see in the world - and, more importantly, because as a Christian, I believe that all of what I mentioned above came as a result of sin (Romans 5:12). \\n\\nSo what is sin?\\n\\nScripture says sin is the transgression of the law of God (1 John 3:4). If God’s law is perfect (Psalm 19:7-9), then sin is lawlessness - in other words, sin is what is not of God, because God is perfect. There is God, and then there is sin, anything apart from God. This should hold true whether you believe in the validity of scripture or not. Does that mean it’s impossible for God to sin? Isn’t that contradictory to his omnipotent nature? Well, not exactly. \\n\\nScripture doesn’t say whether God <i>can</i> sin, but it does say whether he <i>would</i> - and obviously, the answer is no (2 Samuel 22:31). But to assume God chooses not to sin is also incorrect, as that statement implies that what is sin and what is not sin is out of his decree. It’s more accurate to say that God <i>does not</i> sin. It’s not that he lacks the ability to, or decides not to, but that it contradicts his character. God is the definition of holiness, absolute purity (Habakkuk 1:13), and it is that perfect character that determines what is and what is not sin (James 4:12). It’s not a matter of choice, but of character. There, God is omnipotent: he has the ultimate decision, the ability to do - or not do - anything that he decides. God is perfect, and what is not God is sin. \\n\\nSo how do we explain the existence of sin, if it’s not something that God would want, and not something that God does? To answer that, I’d like to start from the concept of free will.\\n\\nFree will is a rather complicated topic that intertwines with other topics of debate, like predestination. However, for now I’ll just focus on the idea of free will - our freedom to make choices in our lives. We know that we have the freedom to sin or to not sin, the choice to follow God or disobey him, both from scripture (Galatians 5:13) and from… well, life. It seems contradictory, then, that a God who desires for good would allow his creation the ability to do evil. To answer this, I’ll pose another question: why would God give us freedom in the first place? It seems like creation would be a lot simpler if all we did was worship the Creator, even if we couldn’t do anything else - and in the presence of God, why would we want to do anything else anyways?\\n\\nI guess when I phrase it that way the answer is rather obvious, if cliche. \\n\\nLove.\\n\\nGod loves us (1 John 4:16, Psalms 136), and he also wants us to love him - but would it be requited love if we didn’t have a choice otherwise? CS Lewis says it nicely in Mere Christianity: <i>“Free will, though it makes evil possible, is also the only thing that makes possible any love or goodness or joy worth having. A world of automata - of creatures that worked like machines - would hardly be worth creating. The happiness which God designs for His higher creatures is the happiness of being freely, voluntarily united to Him and to each other in an ecstasy of love and delight compared with which the most rapturous love between a man and a woman on this earth is mere milk and water.”</i> Here is the intersection of free will and love - for us to truly love Him, we must choose God. God created us with love, and because of this love, he in turn lets us choose what to love.\\n\\nHe gives us this choice, but he also demonstrates his love in an even more beautiful way - and this is where the redemption story comes in. The existence of sin not only allows for us to choose God, it also allows for God to choose us - not a choice between humans and sin, since God is perfect, but the choice of humans <i>even though</i> we sin (Romans 5:8). God showed us his love through the gospel story: the sending of Jesus and his death and resurrection makes it possible for us to even have the possibility of choosing God, of choosing a perfect being when we are so far from perfect ourselves (1 John 4:9-10). He didn’t just give us free will and then dip, he gave us exact directions on how to choose him - through his son, Jesus Christ (John 14:6). The reconciliation of man and God is a testament of how much he loves his creation, that he would take on everything we’ve done against him just so we could have the chance to be with him again. \\n\\nBut for there to be a choice, there must be choices.\\n\\nIn order for us to choose God, we have to be able to choose <i>not</i> God - or, sin. God detests sin (Psalm 11:5, Proverbs 8:13), don’t get me wrong. Sin does not have a place in eternity with him. However, because he loves us, he allows us to have the choice of God or sin. We know that God wants us to choose him (2 Peter 3:9) - he doesn’t want any of his creation to perish. But in order for us to actually come to him, to actually love him, he gives us the choice to turn away in the hope that, like the prodigal son, we will eventually come back to his open arms.\\n\\n <i>[Now, I want to quickly address something I mentioned earlier, and that is the topic of predestination. There’s multiple verses on the multitude God chooses for salvation (Romans 8:29-30, Ephesians 1:5) that points out a seemingly glaring problem with my argument: if God has already chosen who will choose him, what’s the point in all of this? Because I don’t want to spend too much time on this topic, I will instead point to several articles by Enduring Word, Christianity UK, and John Piper, which I encourage you to read if you’re interested in how both our choices and God’s sovereignty work together.]</i>\\n\\nFinally, we’ve reached a point where I have tried to answer the original question to the best of my ability - a point where both an all-good all-powerful God and sin exist, together, intentionally. Now I wanted to talk a bit about suffering. Romans 5:3-5 and James 1:2-4 both indicate that suffering is used to grow our faith. When we suffer, we see both our helplessness and God’s sovereignty - we see the depths of our separation but also the heights he reaches to overcome it. But what about those who suffer but aren’t Christian? Is it simply a result of sin on earth that they are simply subject to suffering? This is a question I’ve struggled with a lot. If I had to answer, I think this is what I would say - God wishes for us to choose him. If we were allowed the choice to sin, but didn’t face suffering, we would never know the consequences of not choosing God. In a world designed for us to choose Him, we must be aware of what happens when we don’t - and thus, suffering.\\n\\nDo I like that answer? Not really. Suffering sucks, no matter how you look at it. I still have a lot of doubts and a lot of questions, no matter how convincing or unconvincing I sounded while writing this. It’s something I’ll ask God to explain when I’m standing before him in eternity - but until then, this is what I can say in all earnesty.\\n\\nI believe God loves his creation (us). I believe God also wants us to love him of our own volition. Because of this, he allows for the existence of sin so that we can make our own choice on whether to love God or love the world. I believe that God demonstrated his love through the life, death, and resurrection of Jesus Christ.\\n\\nI believe that God, in his all-good, all-powerful nature, exists - and so does sin (for now). Maybe it’s because of what I said, or maybe it’s for a totally different reason, but either way I believe. I believe because I’ve made my choice - the choice to follow God.\\n\\nNow I have a question for you.\\n\\nWhat do you choose?","Slug":"fall-23/god--sin-the-problem-of-evil","Title":"God + Sin: The Problem of Evil","Image_Credit":"Stock Photo"},{"Title":"Why love","Text":"<div style=\" display: flex; flex-direction: row; \" ><b> <div style=\" width: 50%\">Why do You love me? </b>\\n\\nWhy do You love me?\\nIt doesn’t make much sense\\nYou’re an almighty God\\nI’m an ordinary person\\nYet You love me\\n\\nI just don’t think I’m worthy\\nI’m not all that great\\nI fail at everything\\nAnd I can’t escape sin\\nYet You choose me\\n\\nI don’t give You enough time\\nI fall asleep during sermons\\nGet distracted when I pray\\nAnd I ignore You\\nYet You value our time\\n\\nWe want different things\\nI want comfort\\nI want to hold grudges\\nI want to focus on me\\nYet You want my heart\\n\\nWe’re not very compatible\\nYou never give me what I want\\nYou always try to change me\\nAnd You never speak to me\\nYet You desire me\\n\\nThis love doesn’t make sense\\nI’ve cursed You\\nI’ve run away from You\\nI’ve hated You\\nYet You died for me</div><div>\\n\\n\\n<b> Why do I love You? </b>\\n\\nWhy do I love You?\\nIt doesn’t make much sense\\nYou’re something I can’t see\\nI’m not even sure You exist\\nYet I love You\\n\\nI just don’t think You’re worth it\\nYou’re not what I thought\\nYou expect so much\\nAnd You have so many rules\\nYet I choose You\\n\\nI give You so much time\\nAll these church gatherings\\nSpiritual disciplines\\nAnd surrendering my life\\nYet I value our time\\n\\nWe want different things\\nI don’t want to be generous\\nI don’t want to forgive\\nI don’t want to build Your kingdom\\nYet I want Your heart\\n\\nWe’re not very compatible\\nI never follow Your commands\\nI’m not who You want me to be\\nAnd I can’t hear You\\nYet I desire You\\n\\nThis love doesn’t make sense\\nYou bring hardship\\nYou make me sacrifice\\nYou turn the world against me\\nYet I live for You</div></div>","Image_Credit":"Photo adapted by Simon Ruiz","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/F23%20Piece%20Title%20Cards%2Ff23titlecard-simon-ruiz.png?alt=media&token=cdc0845c-33ff-4bfe-aa5a-9b30f0332ff8","Author":"Simon Ruiz","Date":"December 8, 2023","Theme":"Debut","Slug":"fall-23/why-love","Issue":"Fall 23","Content_Type":"Poem"},{"Content_Type":"Poem","Issue":"Fall 23","Author":"Stephen Noh","Text":"As Autumn left and the leaves had withdrawn\\nAll value and glamour had gone\\nLifeless and loathed, a tree stands alone and small\\nIts identity and beauty gone at a lone winter’s call\\n\\nAll that remained was a snag of wood covered in frost\\nThe same wood that laid Him nailed to that cross\\nOh, woe is thee, I am a sinner with no worth\\nOne that had wished was never given birth\\n\\nWhat hope could be found as it cried out in agony?\\nAlone and sorrowful as it grew disdain for reality\\nAs it thought it lost all peace, joy, and tranquility,\\nThere descended The Dove, coming down to rest in thee\\n\\nAnd there it heard a voice speaking to appease\\n“You are my Son, whom I love; with You I am well pleased”\\nIn this dry and barren land, You have sent to me the Son\\nAnd He has given me worth when I felt I had none\\n\\nI will remain in Your love throughout all the uncertainty\\nAs we walk hand-in-hand through joys and adversities\\nIn hopeful tunes and gleeful worship, I burst out singing\\nCheerful for I know that this is a new beginning\\n\\nSpring came, and The Dove remained in me all the same\\nI became excited to see what fruit I would sustain\\nYou have given me purpose and given me life,\\nAnd in You I have found all my marvelous delight\\n\\nThe Dove built its home and lay with me till rest\\nIdentity refound and beauty to attest\\nThat I am Broken, but alive, standing with certainty\\nFor He has sown me in good soil to live for eternity","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/F23%20Piece%20Title%20Cards%2Ff23titlecard-stephen-noh.jpg?alt=media&token=adeede3f-ad97-431b-828c-8da4d3bbb777","Image_Credit":"Photo by Stephen Noh","Slug":"fall-23/the-one-who-will-never-leave","Date":"December 8, 2023","Theme":"Debut","Title":"The One who will Never Leave"},{"Text":"<i>“By faith we understand that the universe was formed at God’s command, so that what is seen was not made out of what was visible.” <br/><p align=\"right\">Hebrews 11:3</p></i>           \t<br/><br/>Science does not contradict God. Rather, it explains the ways that God has created the universe. I often find that the more I learn about science—the ways that two molecules collide to form a new one, or the way acceleration due to gravity remains at 9.8m/s2 on Earth—the more revealing it is of just how much greater God is compared to our human existence. The intricate structures that keep the very fabric of our reality bound together become increasingly apparent as I acquire more knowledge about our universe. It is incomprehensible and could only have been breathed into existence by our all-powerful God.         \t<br/><br/>One of the most obvious—and perhaps cliché—examples of God’s power is the “miracle of life.” <br/><br/><i>Adactylidium</i> is a genus of mites in the kingdom <i>Animalia</i> and family <i>Acarophenacidae</i>. These mites are typical residents of the Middle East and feast on the eggs of an insect called a thrip. Yet what sets these tiny creatures of the Earth apart from other insects is their unique—and quite honestly disturbing—life cycle where these mites take the meaning of “the miracle of life” to a whole new level.  <br/><br/>From birth, the female <i>Adactylidium</i> begins to find a new thrip egg to feed on as it prepares itself to become a mother. Yet the male mite barely sees the light of day and dies shortly after birth. It does not mate, it does not feed; it simply waits for its imminent death. For years, scientists couldn’t figure out why these male mites exhibited such a strange life cycle. After all, a creature born with its only purpose being death seemed like a rather depressing and futile existence. <br/><br/>Eventually, the truth behind this uncommon reproductive strategy was revealed.  A female Adactylidium mite is born with fertilized eggs already inside of her. She carries what will become several female mites and one single male mite. In a few days, these eggs will hatch inside of her, giving rise to the next generation of crawling mites ready to repeat the process again. The male then mates with every single one of his sisters in a twisted method of fetal incest before they collectively decide to eat their way out of the mother’s womb.1,2  I guess in that sense, <i>Adactylidium</i> mothers win the parental sacrifice award. <br/><br/>While the process itself is no doubt mindboggling (because what part of fetal incest isn’t), I found myself strangely sympathetic to the seemingly devastating life of a male <i>Adactylidium</i> mite: one where you are doomed to die with your end written before you are even born. It struck a chord in me that I didn’t expect to feel from a creature I would have only deemed disgusting. And yet, I couldn’t help but feel a sense of loss in my soul.    <br/><br/><i>“For afore the harvest, when the bud is perfect, and the sour grape is ripening in the flower, he shall both cut off the sprigs with pruning hooks, and take away and cut down the branches.” <br/><p align=\"right\">Isaiah 18:5</p></i>   \t<br/><br/>Like millions of students around the world, I began my first semester of college in August of 2023. Certain that I would face trials but unsure of what those trials would actually be, I was thrust into the world of independence with nothing but encouragement and cliches from upperclassmen to guide me through a forest of unknowns. <br/><br/>I came into the Fall semester with friendships that I thought were not bound by time or distance. The 775 miles between us were no matter with the blessings of FaceTime and blind optimism. Summer of 2023 gave me the chance to see brothers and sisters in Christ who exemplified the love He calls us to demonstrate in ways I had only ever heard in the sermons. For the first time in my life, I felt like God had blessed me with what my heart longed for the most: intimacy, genuine connection, and the love of those who would walk with me, hand in hand, down the narrow road. <br/><br/>But time proved to be a test that we would not pass. As August turned into September and Fall turned into Winter, the grasp with which I held onto these relationships began to slip through my fingertips. I felt the distance between us grow more and more with each call, each conversation. Desperate for the feeling of comfort I had just months prior, I did everything I could in an attempt to fix what was so clearly falling apart right before me. I was swimming against a current too strong to overcome. Slowly, then all at once, I felt a loss like I had never felt before as I watched those I loved drift further and further away. It felt deep, gut-wrenching. But most of all, it felt wasteful.  <br/><br/>For countless months, I asked God why He took away something that I thought was so right. <i>Why did You take away something that glorifies You? Is that not what You want?</i> He had finally given me the relationships that He spoke of in His word. The kind that is edifying, uplifting, spiritually nourishing. He had given me a taste of what could be but then so cruelly stripped me of it. Why should He take that away, abandon me with nothing but what I had before and a new ache in my soul that longed to be filled once again? <br/><br/>And He spoke to me clearly: Through this, you can see me.   <br/><br/><i>“ The Lord is the portion of mine inheritance and of my cup: thou maintainest my lot.” <br/><p align=\"right\">Psalm 16:5</p></i>  <br/><br/>As I sit at my desk writing this piece, I can feel the strings that once connected me to my high school friends, my teammates, my chosen family, slowly wither away. I used to think that “chosen family” included the people that <i>I</i> chose to be in my life, that late-night ramen and trauma bonding over the hellish depths of AP French was enough to make a friendship last forever. Now I’m not so sure. <br/><br/>What I once thought was an unbreakable rope has now revealed itself to be nothing more than a thread. Destined to snap at some point where we will then finally drift apart, the thread will be lost in the wind while I am left with only the memories we once had the honor of sharing. And even those too will one day fade away as I return to the soil that gave me and the <i>Adactylidium</i> mites the life we lived. <br/><br/>When I look in my hands and see the fragments of these relationships I desperately still cling to, I realize just how little I am able to grasp and incomparably, how much God is able to create with just His breath. My line of vision is only limited to the sum of all my gains and losses of my past, but He sees more. And in that knowledge, I rest assured of His goodness, His righteousness, and His peace as I hand Him these broken strings and my brokenness to create something far greater than I could ever have imagined. Because in this very moment where I am existing, I have yet to lose all the people I will in this lifetime. But I have also yet to meet all the people who will not leave: the ones who will eventually stay by my side in the race toward eternal life with our Father in Heaven.  <br/><br/><i>Verily, verily, I say unto you, except a corn of wheat fall into the ground and die, it abideth alone: but if it die, it bringeth forth much fruit. <br/><p align=\"right\">John 12:24</p></i>  <br/><br/>So maybe chosen family refers to the family that God has chosen for us. I see that God places certain people in my life at a moment in time with a specific purpose: a purpose that will one day be fulfilled, its end written before I even know it has begun. Once complete, they are no longer meant to be in this chapter of your journey, nor you in theirs.  <br/><br/>Perhaps losing is gaining in the eyes of God, a vision of the things we cannot see and quite frankly, do not need to. After all, Jesus Himself lived to die for our sake so that we may reunite with Him in heaven one day, and even his closest disciples could not fathom the sacrifice He was destined to make. In Matthew 16:21-23, Peter confronts Jesus after Jesus foretells His coming death to His disciples and claims that He must suffer for the sake of man and die on the cross. But Jesus rebukes Peter, reminding him of his place and his inability to set his eyes on the things of God and not of this world. <br/><br/>I’ve seen the ways that His path for me far outcompetes any semblance of a plan or desire that I could ever conceivably have or create. Since He holds the pen that writes my story, I, the character, can find freedom in surrender. My story may be filled with hills and valleys and inconsistent terrain but my inconsistency reminds me that He is my sole source of constancy in a life ever shifting. The rock on which I stand, the Father I run to with open arms each time I lose a friend. My unknown is not His unknown: it is His work. <br/><br/>So, is it possible that these incestuous creatures hold more meaning than we would ever think to give them credit for? Can it be that the life of the <i>Adactylidium</i> reminds us of a purpose through the pain? I believe so. If God has truly created and articulated everything down to the way these mites continue to crawl the earth, how secure I can be knowing that the story He has planned for me and the stories He will write for those that coincide with mine is beautifully and wonderfully made. Perhaps this is where I can find peace, knowing that the beauty of our paths crossing is just that: crossing and then continuing on without each other just as we existed before. Left with only the whispers and footprints that they have left behind, we carry on with God to guide us ahead. <br/><br/>And that is enough.","Issue":"Spring 24","Author":"Catherine Tian","Image_Credit":"Illustration by Olivia Hu","Content_Type":"Personal Essay","Title":"Adactylidium","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/Piece%20Title%20Cards%2FS24%2Fcatherine.png?alt=media&token=f131d8a5-7f1e-4d7c-85fe-4a5526d200d4","Slug":"spring-24/adactylidium","Theme":"Cycles","Date":"April 26, 2024"},{"Slug":"spring-24/for-a-daisy-in-a-field-he-is-the-source","Author":"Shirley Lin","Date":"April 26, 2024","Title":"For a daisy in a field, He is the source.","Theme":"Cycles","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/Piece%20Title%20Cards%2FS24%2Fshirley.png?alt=media&token=21c6a96a-a56e-4046-80f7-981eafe96fec","Issue":"Spring 24","Content_Type":"Poem","Text":"A flower that is <b>fragile</b>.  <br/><br/><i>Trust.</i> <br/>But I’m scared.  <br/>My knees have buckled under the weight that seems to pile on, as it increases more and more. Seemingly unending. I look out towards what is in front, but it appears that I have lost my ground. Being knocked down once again, it has become harder to stand. Except this time, the heaviness that I feel from the weight has come down on me, for it’s become difficult to breathe. <br/>My soul has grown weary. <br/><i>Trust in me.</i> <br/>I hear, but the sound of fear becomes louder. <br/>A worry that began as a seed has taken root. My soul has become restless. <br/>For God, I know that all things not from You will be uprooted, but this man-made fear has come to cloud my eyes and shield my heart from You.   <br/><br/>A flower that is <b>drying out</b>.  <br/><br/>Like an overgrown weed stretching its roots and taking the nutrients that were meant to sustain me, fear has trapped me in a loop that seems to have no end as it goes round and round again. <br/>Another day now becomes another cycle of restlessness, of which this worry seems to be sucking my life from the inside out over and over again. <br/>Repeatedly. <br/>Tirelessly. <br/><i>I am left with nothing.</i>  <br/><br/>A flower that is <b>dying</b>.  <br/><br/>For it overwhelms me when weakness has tipped me over. Pulling me down to a bottom that seems to have no end. Sinking deep with arms outstretched, it has become hard to pull myself back up. I cannot by my own strength. <br/><i>How do I move?</i>  <br/><br/>A flower that is <b>withered</b>.  <br/><br/>On good days, I have found a peace that comforts my soul, but on the bad days I am left curled in a ball. For the angst in my heart has weaved its way back and is rooting itself into the crevices of the pieces of my heart. It grows in the broken parts, beyond a repair that I could do on my own. <br/><i>Help me God, for I am weak.</i>   <br/><br/>A flower under His <i>covering; a daisy.</i>  <br/><br/>I cry, and He hears. Thoughts unspoken, yet still known. <br/>He shields and protects me, for my thoughts have been contained. His presence calms me as it draws me in like a refuge. <br/>Abundant because He is the source.  <br/>Shackles that had imprisoned me, debilitated. <br/>Broken to pieces, so I may be made new. <br/>I feel light as the heaviness subsides, for He is the Lord over my heart. <br/>It is in this cycle, where I am healed, born, and renewed. Life that had been closed at the bleakness of night, begins to bloom when morning rises. For I have found joy that encircles me with warm hands. It does not fade. <br/>His covering is safe and it is in His arms where I am met with everlasting grace and boundless mercy.  <br/><br/>A flower that has <i>faith.</i>  <br/>I make a prayer that is unceasing. <br/>Unceasing because even if everything else in this world is left in ruins, He is constant.  <br/>Constant in a cycle, it goes on and on.  <br/>I see Him all the more working in this life of mine, with a heart that has been washed, and a soul that is renewed in Spirit. <br/>I shall not be afraid, for what more could this world destroy? For He is constant in His character, compassionate at heart, and faithful beyond time. The warmth of His embrace encircles me in an unending loop. I am not afraid, because my God brings joy to a day’s toils. <br/><i>So I trust.</i> <br/>What does fear amount to when trust has won over it all? A victory that is ever so present through the surrendering of my will. I no longer fear, for the battles that are fought have already been decided.  <br/><br/>A flower that is <b>small</b>.  <br/><br/>A daisy, because of its simplicity, for it grows in the fields and meadows. <br/>Yet a creation that not even Solomon dressed in all his glory could compare against. <br/>A daisy blossoms under His light, for He offers a love that does not let go. <br/>I am small and simple: a daisy. <br/>He cared, cares, and will care for me like no other. <br/>In God I trust.","Image_Credit":"Photo by Shirley Lin"},{"Slug":"spring-24/hey-god-can-i-get-a-girlfriend","Issue":"Spring 24","Text":"<i>Dear God,  <br/><br/>Thank you for this day that you have made. Thank you for the ways in which you have worked and continue to work in my life. I pray that your Spirit can move in me and transform me to be more like Christ. At this time Lord, I just pray for this one request… God, pleeeease help me find a girlfriend. Yet-not-my-will-but-yours-be-done.  <br/><br/>Amen.</i>   <br/><br/>Look, I’ll be honest. This is something I’ve prayed for… more than once. Actually, more than I’m willing to admit. Call me foolish or desperate or whatever, but I’ll still be huffing that Mark 11:24 hopium in between every breath of prayer. And I wouldn’t be surprised if the majority of people, at least once, have done the same. I mean, it’s natural. We pray for what we desire. I’m at the point in my life where I’ve almost got my master’s degree, I have a job lined up, a good church community and friend group… There's only one thing missing, so that’s what I pray for.  <br/><br/>For all the sad, lonely people who are already regretting their decision to read this piece, don’t worry. I won’t be flaming the desire to be in a relationship. Then I’d just be flaming myself—not cool. Instead, I want to talk about what it means to desire, and where this comes from: to desire in general, not for anything in particular. But in order to do that, I’m going to start from a really long time ago. Like, 2004.  <br/><br/>Enter three-year-old me: already a little walking menace to society. My dad is finishing up his PhD in physical therapy and my mom just gave birth to my sister, so they already have their hands full of responsibilities. I don’t personally remember what I was like back then, but I know from both my parents that I was—as the kids these days would say—a certified yapper. Like most children, what I desired most was attention: the attention of my parents, or the aunties and uncles at church, or strangers in the grocery store. Obviously, I was too young to pray for that, but I think if I’d been able to back then, I would have.  <br/><br/>Skip another three years, and now I’m in elementary school—first grade. Our family had just moved, which meant I was switching schools. As a new student at Indian Trace (okay but why is that name kind of insensitive?), I really only had one desire: friends. I remember this was what I would pray for at night before bed, earnestly asking God for friends so I wouldn’t become some edgy emo kid.  <br/><br/>Fast forward to me as an edgy emo kid in middle school—but don’t worry, it’s just a phase. Growing up in a typical Asian household, the importance of grades and academic excellence were drilled into me from a young age—so you can guess what I started to pray for then. I think you can see where this is going now.  <br/><br/>In high school, I prayed for my robotics team to do well. I prayed for my class rank. I prayed for college acceptances. In college, I prayed for interviews, then internship offers, then full-time jobs. And now we’re all caught up.  <br/><br/>In every season of my life I had some prayer, some desire that I raised to God. They started out small—attention, grades—and gradually became larger as I got older and asked for career opportunities, a job, and now—well, you read the title. The thing is, everything that I wanted was for myself: my grades, my job, my relationship. It’s not like they’re bad things to pray for—I mean, God says to be fruitful and multiply, right?—but I think there is a danger in this cycle of pursuit.  <br/><br/>Now I’m not writing this to tell people not to pray for things. I joked about Mark 11, but it’s not the only verse that talks about God answering prayers—look at Philippians 4:6, or Romans 8:26, Ephesians 6:18… there’s a lot. We’re supposed to lift our requests up to God, and He does say He will provide—not always in the ways that we want, but in the way that He decides. So by all means, pray for what it is that you want, as long as it’s not something illegal like drugs, or the book of Judas.  <br/><br/>It’s perfectly fine to pray for things. But why do I never seem to have enough? Why is it that as soon as God answers my prayer, I move on to the next thing on the list? Once I got into college, I prayed for an internship. Once I got internships, I prayed for a job. And now that I have a job, I’m once again praying for the next item on my checklist, so to speak. Is this cycle going to keep on repeating until I die? Will I pray for a wife, a new car, a kid, a house, a kid, another kid, on and on forever?  <br/><br/>Well, the TLDR is, yes. Yes I will. But it’s a bit more nuanced than that.  <br/><br/>I think the danger I see for myself is when my desires become the reason for my prayers, and the reason for my thankfulness to God. When I pray because I’m requesting something from God, and not because I want to talk to God, He stops being God and starts becoming a genie - and that’s not the relationship we’re supposed to build with Him. I start to pray, not for God, but for myself. It seems like the best way to overcome this is to just never desire anything then, right?  <br/><br/>The problem is, I’m human. I’m also not Buddhist, so that whole detachment from desires thing? Yeah, I’m good. I will naturally look towards the next goal, the next milestone in life that I’m reaching for. Is that unhealthy? I don’t think desiring what is to come is unhealthy, but maybe that continual pursuit, over and over, is. I mean, we pray and pray for something to happen. Then when it does, what do we do? Maybe we’re thankful for a while, but eventually something new comes up, and we pray and pray again. That’s not how we’re supposed to live out our life.  <br/><br/>So how do I break out of this pattern of desire? This is something I’m still struggling with today, and honestly I’m not sure if it’s one I'll ever overcome. But I’ll try. I know that what I pursue, first and foremost, cannot be my worldly desire. Every time I’ve done this I’ve been left unsatisfied no matter the result. Instead, breaking the cycle of pursuit requires me to pursue God above all. If you think about it, that makes sense. I’ll never reach God—not on earth, anyways. So I’ll always be reaching towards Him, running to Him, but never coming even close to God. It’s no longer a cycle, because it can’t be one if it never repeats, am I right?  <br/><br/>Then the question becomes, what <i>is</i> the pursuit of God? What does it look like? And to that, I say… I don’t know. Or rather, I don’t know the full scope of it all. It means to put Him first. It means to seek to become more like Christ. It means that in everything we do God should be the reason, and the way. And it means so much more that I just don’t know. How is it possible to do all that, to be all that? Well, like the incredibly based Jesus said, “With man this is impossible, but with God all things are possible” (Matthew 19:26).  <br/><br/>I guess pursuing God is a daily process—one I’m still trying to figure out. That’s kind of its own cycle in itself, except I’m always reaching towards the same goal. I still desire the things that I want, and I still pray to God about them. But I hope to reach the point where I’m lifting up my requests in prayer <i>because</i> I am talking to God, and not the other way around. It’s like what Jesus said in the sermon on the mount: “Seek first His kingdom and His righteousness, and all these things will be given to you as well” (Matthew 6:33). Only then can I break out of this cycle of worldly pursuit and instead pursue God. With a heart desiring Him and my eyes focused on Christ, I will once again ask:   <br/><br/>Hey God, can I get a girlfriend?  <br/><br/>Amen.","Author":"Raph Cheng","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/Piece%20Title%20Cards%2FS24%2Fraph.jpg?alt=media&token=ce381ada-a6f1-4f18-9d26-95a0abda321b","Content_Type":"Personal Essay","Title":"Hey God, Can I Get a Girlfriend?","Date":"April 26, 2024","Theme":"Cycles","Image_Credit":"Photo by Stephen Noh"},{"Issue":"Spring 24","Author":"Esther Shen","Title":"If Grace is an Ocean","Text":"<i>Just a little further.</i>  <br/><br/>The ocean is within grasp. I can almost feel the waves caressing my fingertips as I crawl ever so slowly, ever so desperately toward the water. I have no strength to stand. My whole body aches. My vision is hazy, my head spinning, heart pound, pound, pounding to no steady rhythm.  <br/><br/><i>Left. Right. Left. Right.</i>  <br/><br/>Futile as a stranded turtle, I struggle toward the sea like my life depends on it. Except…my life really does depend on it. My chest, pressed painfully against the coarse sand, hoarsely screams for a sip of refreshing relief. The dirt smothering my face as it clouds the air in my frantic hustle isn’t helping at all.  <br/><br/><i>Almost there…</i>  <br/><br/>With one final heave costing the measly remainder of my energy, I plunge my face into the rushing waters and inhale a deep mouthful. With every gulp, I thirst for more. I keep drinking. It tastes awfully salty but I don’t care. What other option do I have?  <br/><br/>I pause, lifting my dripping face to catch a glimpse of the sun making its daily pilgrimage below the horizon. How dazzling! …Is what I would think if I were not at my wit’s end. I sigh and stare longingly where the sky meets the sea, pondering the mystery it holds. I have reached the shore after wandering through the desert, but it isn’t quite the oasis I had hoped for. There is no trace of life besides my own wretched frame, and though there is water, it cannot sustain me.  <br/><br/>Slumping down in dissatisfaction, I am suddenly overtaken by a flaring thought: <i>I wanna get out of here.</i> Though venturing through the ocean may hold many unknowns, I have already hit rock bottom and have nothing to lose. A small whisper in my head tells me I should rest before embarking on another journey, but my desperate heart yearns for a sense of security that staying here simply would not grant me. Without waiting another minute, I dive into the water and swim blindly in some ambiguous forward direction, not daring to open my eyes for fear of the stinging salt. My hands reach and reach and reach, for solid ground but really just for my sanity. <i>Left, right, left, right.</i> Stroke after uneven stroke. Hoping against hope that my striving will find me a new home.  <br/><br/><i>Suddenly—</i>  <br/><br/>A wave crashes over me. I’m caught off guard and tumble in its wake. Instinctively, I open my eyes to gain my bearings then immediately squeeze them shut, but not before the harsh bite of saltwater permeates my pupils. I thrash around in an extremely barbaric fashion, searching hysterically for breath, a million panicked thoughts scribbling heaping chaos onto the canvas of my brain each second. No one is around to save me, my cries echoing at a different frequency than any other. I hear alarm sirens. Thumping. Tick. Tock. The scribbles suffocate my mind as the water suffocates my lungs and all the noises start blending together in a horrific symphony. Where’s the surface? Where, where, where…  <br/><br/>I kick furiously and my head finally bursts through to the open night air. A massive gasp explodes from my gaping mouth, sputtering helplessly but grateful for the sweet taste of oxygen. With my eyes finally safe to open, I look around excitedly and feel a wave of disappointment surge through me—rather than in view of a new shore, I am right back where I started. <i>You’ve got to be kidding.</i> Refusing to accept defeat, I pounce back into the water as it crawls up the beach, determination coursing through my veins.  <br/><br/>Before I know it, the wave brings me back. <i>I didn’t try hard enough.</i> Go again.  <br/><br/>Washed back to shore. <i>I’m too weak.</i> Do it again.  <br/><br/><i>A failure.</i> Again.  <br/><br/><i>Insufficient.</i> Rinse. <i>Abandoned.</i> And. <i>Despised.</i> Repeat.  <br/><br/>Again. <br/>And again. <br/>And again and again and again.  <br/><br/>I am drained of everything but my flaming desire to escape. I wonder how the water hasn’t put it out yet. <i>Just one more time,</i> I say to myself.  <br/><br/>One more time, I thrust my body forward. One more time, I endure the stinging salt and the even greater sting of my self-effacing mentality. I kick and pull harder than ever before, subconsciously bracing for the wave that is to come.  <br/><br/>Right on cue, it slams into my face. It’s a pointless chase. I am in no condition to fight the waves, which cruelly hurl me back to square one against my will, time after time. I wonder: if I am doomed to be stuck here, is it worth enduring at all? I let my limbs drift down to my side. I feel my limp body sinking into the depths, and for the first time in forever, I don’t try to fight. For the first time, I feel a strange sense of peace.  <br/><br/>Through the darkness, a tender voice calls out to me: “Open your eyes.” Perplexed, I hesitantly comply. Behold, a most beautiful sight meets my gaze—in the waters above me, a display of graceful lights transform the murky sea into a stage for glowing dancers, twinkling with indescribable gentleness. It pierces and shines through the chaos swimming in my mind. I am so mesmerized that I almost don’t realize my eyes are now comfortably open underwater, unaffected by the salt I was once so afraid of. And miraculously, I am no longer suffocating from lack of air, but my lungs are filled with vigorous breath anew. It’s like the moment I let go of control, I became free.  <br/><br/>“Come to me, my child,” the same voice calls out again. Then it hits me. The source of light, the peace that surpasses understanding, the breath of life—this voice, it comes from my Father. The Father I neglected in favor of my own pursuits.  <br/><br/>I can’t see where His voice is coming from, but somehow I know exactly where to go. The balletic lights guide me back to shore, and time stands still as I pass through the waters in tranquility. I can’t believe these were the same waters I was battling for my life against just moments earlier.  <br/><br/>Upon reaching the shore, my head bobs out of the water to witness the sun stretching out its rays in a serene yawn, sending streaks of pink, orange, and gold across the vast expanse of the sky. The shiny wetness of the sand extends far and wide, mirroring the extravagant illustration up above. As I kneel in awe, calm waves still lapping at my feet, the beauty of creation takes my breath away, and the world seems to hold its breath with me.  <br/><br/>Finally, I dare to take a breath, a timid inhale and exhale that whispers His name: “<i>Yahweh.</i>” I turn my eyes to rest upon the silhouette of my beloved Father, standing on the drier regions of sand farther upshore. He smiles warmly, eyes sparkling infinitely brighter than the lights I saw underwater. He opens His arms in invitation. I don’t need to be asked twice—I run toward Him as fast as my weary legs will take me, soaring across the beach but my soul soaring faster, tears flowing and left behind in the wind.  <br/><br/>Tumbling into His arms, I let out a sigh of relief. He tightens His embrace. Although I am soaked through and plastered with innumerable grains of sand, He does not pull away in repulsion. A strange sensation of lightness overwhelms me as all my burdens are lifted, even those hidden to myself. Taken aback, I look up and He says softly, “Now doesn’t that feel better?” I nod and feel my face contort uncontrollably as a sob rises from deep within my throat. My words choke before they have the chance to be said. <i>I’m sorry.</i>  <br/><br/><i>I’m sorry for chasing after my own desires. I’m sorry for being caught up in myself. I’m sorry for corrupting Your love with my judgment. I’m sorry for seeking treasures that can never satisfy. I’m sorry for forgetting only You can satisfy.</i>  <br/><br/>Amidst the waterfalls blinding my vision, I see my Father saying something. “I know. And I love you all the same.”  <br/><br/>The tears rain heavier, if that’s even possible. All this time I was thirsting for things of this world, but the more I drank up that sea, the more I grew thirsty. All this time I was trying to swim elsewhere to satisfy my needs, thinking I knew best, but my gracious Father never let me go and kept sending waves to bring me back. All this time I thought the beach was a barren land, but He was there all along, better than any oasis I could stumble upon, overflowing with living water that will never run dry. Despite my persistent disobedience, He persistently pursued me. How steadfast He is, more than the sun we know will rise each day, more than the waves with their constant push and pull.  <br/><br/><i>God, why do You love me?</i> I don’t deserve a single ounce of Your love, yet You lavish it freely. Because that’s simply who You are, loving simply who I am. Though I am but a vase marred by cracks that will continue breaking under the weight of my own sin, You will never stop piecing me back together, over and over again. My broken spirit that I despise so much, oh God, You never will. Somehow, You call me worthy to receive Your unending streams of mercy, replenishing my empty soul; worthy to stand here today even with all my failures, redeemed by the blood of Your only Son.  <br/><br/>How wonderful it is to be fully known and loved by You! Your goodness is sweeter than anything I’ve ever tasted, even the fresh air after escaping the clutches of the sea. With You, even when the waves crash over me, I am safer than I have ever been.  <br/><br/>I look up again at the rising sun. It’s a new morning to enjoy His mercies, to be satisfied with His love.  <br/><br/>I burrow deeper into His warm embrace.  <br/><br/>I’m home.","Content_Type":"Short Story","Slug":"spring-24/if-grace-is-an-ocean","Date":"April 26, 2024","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/Piece%20Title%20Cards%2FS24%2Festher2.jpg?alt=media&token=08f90545-b5dd-487f-8521-197c4160ca80","Image_Credit":"Photo by Esther Shen","Theme":"Cycles"},{"Slug":"spring-24/journey-of-the-broken","Title":"Journey of the Broken","Theme":"Cycles","Content_Type":"Poem","Image_Credit":"Illustration by Joshua Park","Date":"April 26, 2024","Author":"Joshua Park","Text":"<i>“The Lord is close to the brokenhearted and saves those who are crushed in spirit.” <br/><p align=\"right\">Psalm 34:18</p></i>  <br/>In the depths of night, where shadows dance,  <br/>There dwells a girl in a recurring trance.  <br/>A soul named Aria, with scars so wide,  <br/>Navigating life's relentless tide.  <br/><br/>In cycles of hurt and condemnation's sting,  <br/>She wanders lost, a broken thing.  <br/>Her heart aches with each passing day,  <br/>Caught in the rhythm of life's disarray.  <br/><br/>Through relationships that ebb and flow,  <br/>Aria seeks solace, no longer to be alone.  <br/>Yet in the silence, she finds despair,  <br/>As cycles of pain ensnare.  <br/><br/>“In the labyrinth of my soul, I roam,  <br/>Haunted by shadows and echoes of old homes.  <br/>With trembling hands a heart laid bare, <br/>Surrendering all my brokenness to God’s care.  <br/><br/>The weight of expectations, a heavy chain,  <br/>Binding my spirit, causing me pain.  <br/>For in the darkness, doubt's whispers grow,  <br/>Slowly cornered by loneliness’ relenting tow.  <br/><br/>In cries for help, masked in disguise,  <br/>Afraid to be seen as attention's prize.  <br/>Beneath the facade, my pain remains,  <br/>Hidden behind a mask, silent refrains.  <br/><br/>Never feeling good enough, never worthy of love,  <br/>My heart burdened by shadows from below,  <br/>Despite all this, in the depths of my despair,  <br/>I still kneel to pray, for faith always finds its way”  <br/><br/>Trapped by the allure of solitude within,  <br/>Aria succumbs to the lonely din.  <br/>But in Christ, she finds a glimmer of grace,  <br/>A chance to escape from the darkest place.    <br/><br/><br/>A journey of redemption, not walked alone,  <br/>In the depths of desolation, Christ’s light has shown. <br/>Revealed that God’s love and companions brings her light. <br/>With their support, she finds courage to rise.  <br/><br/>With each step forward, she leans on His Word, <br/>Finding solace and strength in the truth she’s heard. <br/>Delivered from emptiness, she finds peace in His Grace, <br/>A new creation in Christ, she embraces her place  <br/><br/>Close to the brokenhearted, the Lord's embrace,  <br/>In Aria's journey, Her identity finds its place.  <br/>For those crushed in spirit, He offers his hand,  <br/>Guiding Aria to a brighter land.  <br/><br/>In the ebb and flow of human strife,  <br/>She learns the beauty of God’s calling to life.  <br/>For in each dawn, a chance to start,  <br/>To mend the cycles of a broken heart. ","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/Piece%20Title%20Cards%2FS24%2Fjp.png?alt=media&token=4632ec30-5a15-489e-a723-07c2765ee09e","Issue":"Spring 24"},{"Theme":"Cycles","Text":"“Why does God allow so much evil?” Is one of the most common doubts preventing people from putting their full trust in the Christian God. For the believer, this might be formulated as, “why do I keep on sinning?” For a non-believer perhaps, “why does God let evil continue to exist?” Underpinning these questions is a yearning to be rid of the cycle of evil, to be free of the pain and suffering.  <br/><br/>In a hyper-rationalistic Western society, people, especially in universities, look to science or personal anecdotes for answers, venerating the language of numbers and subjective truth. However, science, a philosophy unto itself, cannot produce answers to existential questions beyond empty nihilism and cynicism. The scientific method by itself cannot be used to prove that ideas or objects themselves have genuine intrinsic meaning or value; no amount of linear regression or evolutionary theory can give a non-material meaning to human life. More broadly speaking, cold rationalism does not address the emotional aspect to evil, and is also not the only aspect of belief or faith that God desires. Neither is the born again experience<sup>1</sup> or general, feel-good anecdote of victory over sin enough to truly vanquish evil, because feelings alone are not sufficient to impart objective truth. What is evil to one person is good and proper in another person’s eyes. To base our response to evil solely in our personal judgements thus invites disaster, because emotions are fleeting. People have explored both logical and experiential approaches to dealing with evil, so I hope to introduce another method of reasoning via the paradigm of symbolism, which blends together the strengths of both approaches. By representing the cycles of evil as an Ouroboros, a serpent biting its own tail, we can better understand the war God wages against evil, and our place amidst spiritual warfare.  <br/><br/><b>Know Thy Enemy…</b> <br/>The Ouroboros is historically known to represent immortality or eternity. As it devours its tail, it forms a loop and becomes self-reliant, needing to only eat its own tail to continue existing. More plainly, the result is self-generated; once it begins it provides impetus to repeat itself. In this sense the Ouroboros illustrates the rhythm of human history. We can firstly see this with the wars, genocides, and rapes that echo throughout history and continue through the modern age. We can also see this through the cyclical advent and demise of societies and dynasties. Niccolo Machiavelli and many others in observing the fluctuations of societies notes that in essence, “good people create good times, good times create weak people, weak people create bad times, and bad times create good people.” Ecclesiastes 1:9 sums this up: “What has been will be again, what has been done will be done again; there is nothing new under the sun.” Before we can cast the Ouroboros as a representation of evil, we need to understand what “evil” is. In Christianity, sin is analogous to evil, and the Greek word for sin, “Hamartia,” means “to miss the mark” or “to err.” The Augustinian Theodicy<sup>2</sup> however provides a fuller application of this definition, which states that evil is a corruption of good. This definition proves to be more complete, as it universally applies to any conceivable evil act. As stated concisely by Inspiring Philosophy, “evil is an attempt to obtain power, pleasure, or safety…things which are not inherently evil. Evil cannot be evil for the sake of being evil. One can only be evil for the sake of obtaining what is already good.” Take for example, the application of the scientific method in medical research. One can easily find a litany of examples where doctors and governments conducted dangerous and often lethal experiments on uninformed participants to obtain medical knowledge. Neither the scientific method nor medical knowledge are intrinsically evil, but their application and pursuit was twisted so that they became evil. Thus, whenever something is “in its proper place,” that object becomes good. In short, morality is contextual.  <br/><br/><b>…Know Thyself</b> <br/>With that information, one could soundly conclude that to fight the Ouroboros, they just need to purge whatever it has devoured and corrupted. But that is to miss the entire point. If we are a part of human history, then we are already in the belly of the beast. The genocides and various atrocities were not the sole responsibility of great evil men who needed to be defeated, but also that of ordinary people — that is, you and me. In an attempt to study the psychology of genocide, Stanley Milgram<sup>3</sup> conducted perhaps one of the most damning studies on human nature; we follow orders, even those that directly conflict with their moral conscience. Deep within every person is the yawning abyss of Hell. In fact, all of history’s great tragedies were the result of this very hell woven into our nature.  <br/><br/>Just as we fight the enemy without, we must be wary of the enemy within. As Nietzche says, “whoever fights monsters should see to it that in the process he does not become a monster.” Jesus taught that “Your eye is like a lamp that provides light for your body. When your eye is healthy, your whole body is filled with light. But when your eye is unhealthy, your whole body is filled with darkness. And if the light you think you have is actually darkness, how deep that darkness is!” (Matthew 6:22-23). For many people, addiction is the most straightforward example of the Ouroboros within us; as one becomes more addicted to something, it becomes more and more impossible to cut it out of your life. “As a dog returns to its vomit, so a fool repeats his foolishness” (Proverbs 26:11). This is not limited to drug or media addictions, but rather an entire metaphor for sin itself. Put another way, as a disease begets itself, so sin begets sin, needing only to feed off itself to grow. “There is a path before each person that seems right, but it ends in death” (Proverbs 16:25). The Ouroboros then, is the craftiest monster of all: it is simultaneously a roaring Leviathan and a silent cancer, corrupting everything it devours.  <br/><br/><b>Crushing the Head of the Serpent</b> <br/>So then, how can we slay the Ouroboros? Our initial urge might be to slash its body, to punish evil deeds as they happen, as God does in the first part of Genesis. When Adam and Eve ate of the fruit of the knowledge<sup>4</sup> of good and evil, He banished them from the garden. When Noah’s generation became perverted and violent, God flooded the Earth so that the corruption might be cleansed from Earth. But humanity continued to sin.   <br/><br/>We might reasonably conclude, then, that sin persisted because Noah didn’t educate his offspring. So God gave Moses the law, teaching the Israelites what they could and couldn’t do. This method was incomplete, because many failed to even obey the law while others ignored the spirit of the law — but it paved the way for the solution. God offers His son Jesus Christ to be devoured by the Ouroboros, by having Him die a criminal’s death despite His innocence. Because Jesus was sinless, He starved the Ouroboros from within, providing no evil the Ouroboros could use to regenerate itself. Then, through His resurrection, Jesus symbolically emerges from the Ouroboros and removes its tail from its mouth, breaking the cycle and proving victorious over death. The poisonous serpent struck the heel of the Son of Man, and He crushed the head of the serpent. In this process, God does a “double inversion,” inverting that which is corrupted and restoring it, using evil to accomplish a greater good.   <br/><br/>Our solution then, is to build the foundation of our life, with all of its desires and purposes, on God. Instead of relying only on ourselves for life and meaning, we turn to God to redeem us from the belly of the Ouroboros, to fulfill the context for which we were designed, which is worship of the Ultimate Good. When our spiritual food is our own tail, whether that is living life only for ourselves  or relying only on our own power and intellect, we invariably turn up empty, because we are limited. But when we eat the spiritual bread of Jesus Christ by trusting and worshiping Him, and seeking to walk in His ways, we partake of the death and resurrection of Jesus Christ, robbing the Ouroboros of its meal.   <br/><br/>For the glory of the Lord then, let us arm ourselves with His Word and protect ourselves with the grace He purchased with His blood, and go slay the Ouroboros!  <br/><br/><ol><li>The born again experience refers to a significant turning point going from a life of sin to “being born again” into a Christian</li> <li>A Theodicy is a philosophical argument providing a defense against the problem of evil, trying to resolve the apparent contradiction between an all-good, all-powerful, and all-knowing God and the existence of evil.</li> <li>The Stanley Milgram experiment had participants acting the role of a teacher, who asked questions to a “learner,” a paid actor, and were told to deliver shocks whenever the learner gave a wrong answer. The fake shocks would increase in voltage for every wrong answer and the experiment would end either when the participant wished to stop the experiment four times or when the lethal voltage was delivered three times.</li> <li>The fruit of the knowledge of good and evil refers not to logical knowledge, but experiential knowledge. The fruit in and of itself is not necessarily evil.</li></ol>","Title":"Slaying Ouroboros","Image_Credit":"Illustration by Allison Chung","Date":"April 26, 2024","Issue":"Spring 24","Slug":"spring-24/slaying-ouroboros","Content_Type":"Academic Essay","Author":"Elliott Chen","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/Piece%20Title%20Cards%2FS24%2Felliott.JPG?alt=media&token=b420ebe6-768d-4f26-a5e5-c06c8c666ba0"},{"Theme":"Cycles","Issue":"Spring 24","Image_Credit":"Illustration by Allison Chung","Date":"April 26, 2024","Text":"<b>Without you…</b>  <br/><br/>Every morning I sit at our table <br/>Looking out the window <br/>Drinking a cup of coffee  <br/><br/>I instinctively reach my hand towards yours <br/>Only to be met with nothing <br/>Remembering, that you’re not here  <br/><br/>…Was the world always this empty?  <br/><br/>Every afternoon I come home <br/>Weary from a long day of work <br/>I open the door and walk in  <br/><br/>I instinctively await your hug <br/>Only for it never to arrive <br/>Remembering, that you’re gone  <br/><br/>…Was this room always so cold?  <br/><br/>Every evening I cook the same meal <br/>Making a bit too much <br/>Thinking about how it was your favorite  <br/><br/>I instinctively grab two plates <br/>Only to put one back <br/>Remembering, that I’m alone now  <br/>…What’s the point without you?  <br/><br/>Every night I get ready for bed <br/>Surrounded by my emptiness <br/>Bombarded by memories of you  <br/><br/>I instinctively turn to face you <br/>Only to see no one <br/>Remembering, that this is my life now  <br/><br/>…How do I do this again tomorrow?    <br/><br/>We were supposed to visit your parents for Christmas <br/>Do I still go? <br/>How are they dealing with it? <br/>What do I even say to them?  <br/><br/>Your friends keep reaching out <br/>I fake my strength <br/>I tell them I’m doing fine, or I’m busy <br/>Because seeing them still hurts  <br/><br/>God… why did You take her away? <br/>She loved You dearly <br/>She lit up every room she entered <br/>She cared for everyone <br/>But I’m here in a dark room  <br/><br/>God… why wasn’t it me instead? <br/>She would know how to do this <br/>She would lean on You <br/>She would comfort our friends and family <br/>But I'm here hiding away  <br/><br/>God… what now? <br/>I’m a mess without her <br/>I’m so empty <br/>I’m not able to handle this <br/>But I’m supposed to continue everyday without her?  <br/><br/>God… I can’t <br/>The world is moving too fast <br/>While each moment is painfully long <br/>This is all too much for me <br/> <br/><hr>  <br/><b>With<s>out</s> you…</b>  <br/><br/>Everytime I wake up <br/>I hope this nightmare is over <br/>But everything is the same  <br/><br/>How long do I wait? <br/>They say You’re always working <br/>And that I should trust You  <br/><br/>Why is nothing changing?  <br/><br/>Every time I eat <br/>I expect her to pray <br/>But no prayers come  <br/><br/>Should I pray? <br/>I’m too afraid <br/>Because it didn’t work for her  <br/><br/>Why didn’t You answer my prayers?  <br/><br/>Everytime I see a couple <br/>I think of the plans we had <br/>They’re all gone now  <br/><br/>Your ways are higher right? <br/>You work all things for my good <br/>I should probably submit to Your will  <br/><br/>Why did You take her?  <br/><br/>Every time I’m alone <br/>I’m consumed by my thoughts <br/>A crippling whirlpool  <br/><br/>Unable to escape <br/>With You in the center <br/>Waiting calmly  <br/><br/>Why are You just standing there?!    <br/><br/>Can You do something for once? <br/>I’m drowning in this sorrow <br/>While You do nothing <br/>Are You enjoying this?  <br/><br/>This is all Your fault <br/>You ruined everything <br/>While I suffer <br/>Please just fix something  <br/><br/>You could’ve saved her! <br/>Unless You’re not all powerful <br/>Or maybe You don’t care <br/>Either way, she’s gone <br/>Are You even hearing me?  <br/><br/>You could’ve made a different plan! <br/>Your ways don’t seem better <br/>All You do is bring pain <br/>And somehow that gives You glory? <br/>Are You even worth following?  <br/><br/>You could’ve changed anything! <br/>Unless You’re too busy to notice <br/>You are God after all <br/>Why bother with us? <br/>Are You even loving?  <br/><br/>You could help me… <br/>Yet You haven’t <br/>Still, I can’t save myself <br/>Where else could I even go? <br/> <br/> <hr> <br/><b><s>Without</s> You…</b>  <br/><br/>Every day You watch over me <br/>Willingly taking my curses and insults <br/>Because You know my pain  <br/><br/>You felt it too <br/>But You also know the healing <br/>AndSo You remain a stronghold  <br/><br/>How can You put up with me?  <br/><br/>Every week You comfort me <br/>When it all seems too much <br/>You are here giving me strength  <br/><br/>You see my battles <br/>But You also know the victories <br/>So You remain a refuge  <br/><br/>How can You still love me?  <br/><br/>Every month You rejoice over my growth <br/>Even when I see none <br/>You notice every step  <br/><br/>You see where I’ve been <br/>But You also know where I’ll be <br/>So You remain a guide  <br/><br/>How can You still hope in me?  <br/><br/>Every year You are patient with me <br/>Despite my faithlessness <br/>You have never abandoned me  <br/><br/>You knew the journey <br/>But You also know the glory it brings <br/>So You remain my Father  <br/><br/>How can You be so faithful?    <br/><br/>Although it hurts now <br/>You are still good <br/>When it all seems unchangeable <br/>You are still powerful  <br/><br/>Although You feel distant now <br/>You are still present <br/>When it all seems unknown <br/>You are omniscient   <br/><br/>You were there at the creation of the universe <br/>You watched every rise and fall <br/>You endured Your Son on the cross <br/>You rejoiced when He rose <br/>And You partook in our lives  <br/><br/>You were there when we met <br/>You watched as we fell in love <br/>You bore through every nervous date <br/>You celebrated our wedding <br/>And You partook in our joy  <br/><br/>You were there when she died <br/>You watched every tear fall <br/>You heard every desperate prayer <br/>You felt every heartbreak <br/>And You partook in our grief  <br/><br/>You will be there through the restoration <br/>You will be there when the pain blesses Your people <br/>You will be there when the growth glorifies You <br/>You will be there when I sing Hallelujah <br/>And You will partake in our worship","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/Piece%20Title%20Cards%2FS24%2Fsimon.png?alt=media&token=dfa29a02-4dae-488b-920d-62c3c2ff4817","Title":"Without you…","Author":"Simon Ruiz","Slug":"spring-24/without-you","Content_Type":"Poem"},{"Author":"Chris Moon","Theme":"Cycles","Date":"April 26, 2024","Image_Credit":"Photo by Chris Moon","Content_Type":"Personal Essay","Text":"Growing up, I never wanted to use the dishwasher. I thought it was such a waste of water and energy (which, with modern dishwashers, is not the case at all; in fact, hand-washing dishes uses more water). More than that, however, was my conviction that dirty dishes put through the dishwasher never came out completely clean. Occasionally, I would find remnants of a previous meal left on a bowl or a spoon. And to me, it made sense; how could I trust that this unseen washing cycle was really doing its job if there was always some blemish left after? I had no faith that my dishwasher truly worked, as it only ever yielded almost-but-not-quite-clean dishes for me to deal with.   <br/><br/>As one progresses in the Christian journey, the necessity of both salvation and sanctification are revealed. For the saved believer, salvation is a one-time occurrence in our life. Jesus does not continually return to the world to offer Himself up, over and over again, but will return once more “not to deal with sin but to save those who are eagerly waiting for him” (Hebrews 9:28). As such, the gift of salvation, having been received by the believer, happens once in our life. Paul writes to the Ephesians, it is “by grace, through faith” that we have been saved, a gift from God and not our own doing “so that no one may boast” (Ephesians 2:8-9).   <br/><br/>While salvation is a singular event, sanctification is a lifelong occurrence. Throughout the New Testament, God reveals the necessity of being sanctified throughout our transformed life on earth. In Luke 9:23, we are told to take up our cross <i>daily</i>. Unlike Jesus, who carried the cross once for all, we are called to carry ours every day. The incomplete and present-day nature of sanctification is further made clear in other passages as well. In Philippians 1:6, the God of covenants has promised us that the work He has begun in our lives (after being saved) will be brought to completion on the day of Jesus’s return. As seen in Hebrews 10:14, through Jesus’ sacrifice, we are made perfect through Him. Notice, however, in both of these passages, the tense is indicated as present/future oriented; He <i>will</i> bring to completion the work for those of us <i>being</i> sanctified. Where we have been saved, by a salvation that needs to occur only once, God’s work in us does not end there. We still flow through the cycles of sin, repentance, forgiveness, and sanctification until the “day of Jesus Christ”, of which only God knows when that day will come.  <br/><br/>In a way, the process of sanctification is a lot like the dishwashing process. Dishes get dirtied and need to be cleaned; likewise, when we sin and fall short of His glory, we must repent and be cleansed by His blood. However, dishes do not stay clean forever even after being washed. They are used, dirtied, and must be cleaned, over and over; after being saved, we will continue to sin, ask for forgiveness, and be renewed by Him. Where Christ needed to die for sins only once and our acceptance of this saving grace needs to happen only once, everyday in our life on earth brings the need to be restored, carried, sanctified again.   <br/><br/>Throughout my life I have seen dishes slip out of my hands and shatter, rendered unusable and sometimes, cutting and wounding me. Each time this happens, it serves as a humiliating reminder of my own weaknesses and shortcomings. I am often prone to wonder what the point of this cleaning process is, if the process of getting dirty and getting hurt, time and time again, is inevitable. Though the continuous need to be sanctified can be disheartening and difficult, it is necessary as a fallen human being striving to live as a child of God. God does not view me as a chore to get out of the way, a burden and bother standing between Him and His will. Rather, God loves me so much that not only did He give His life to save me once, but cares so much to provide constant and present restoration in the midst of waiting for the eternal hope He has promised me.      <br/><br/>Unlike a dishwasher, God is not fault-prone or errant. In my mistaken point of view, washing the dishes with my own hands is cleaner and more efficient. The reality of the superior efficiency of a dishwasher reveals that it, in fact, has a better understanding of how much water, power, and soap to use. Where my limited understanding fails, God’s understanding surpasses what I know or can even see. Though the dishes He washes may come out of the cycle with blemishes still, this is not an indication of an imperfect God; rather, the work in our lives is not yet complete. With our faults and imperfections, God reminds us that He has use for us yet (2 Corinthians 12:9-10). Though our lives may fall and shatter in our own hands, we are held by, cared for, and sanctified by the same One who authored our salvation (Hebrews 2:11).","Image":"https://firebasestorage.googleapis.com/v0/b/agora-ca31b.appspot.com/o/Piece%20Title%20Cards%2FS24%2Fchris.jpg?alt=media&token=6018141a-bdaa-439b-a4af-363a241e5f4b","Slug":"spring-24/sanctification-and-why-i-dont-like-the-dishwasher","Title":"sanctification, and why i don’t like the dishwasher","Issue":"Spring 24"}]","status":200,"url":"https://agora-backend-sxd6.onrender.com/getJournalEntries"},"revalidate":31536000,"tags":[]}